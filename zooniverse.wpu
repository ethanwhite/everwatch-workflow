#!wing
#!version=6.0
##################################################################
# Wing IDE project file : User-specific branch                   #
##################################################################
[user attributes]
debug.exceptions-ignored = {loc('../../../miniconda3/envs/crowns/lib/python3.7/site-packages/_pytest/config/__init__.py'): {1130: True}}
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'LfPD5D2a8ynAK2sybEe3c4A0IQ'\
        'zTXQPX',
        'size-state': '',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [0,
                                   0],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.25,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'expanded-nodes': [],
                                 'selected-nodes': [],
                                 'top-node': ()}},
        'tree-style': 'deep'}}),
                              ('browser',
                               'tall',
                               0,
                               {}),
                              ('snippets',
                               'tall',
                               0,
                               {}),
                              ('source-assistant',
                               'tall',
                               2,
                               {}),
                              ('debug-stack',
                               'tall',
                               1,
                               {}),
                              ('indent',
                               'tall',
                               2,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [1,
                          4],
        'notebook_display': 'normal',
        'notebook_percent': 0.30000000000000004,
        'override_title': None,
        'pagelist': [('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 46,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': u'args',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 46,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': u'bounds',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False}}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('debug-exceptions',
                      'wide',
                      0,
                      {}),
                     ('debug-breakpoints',
                      'wide',
                      0,
                      {}),
                     ('testing',
                      'wide',
                      0,
                      {'added-files': [],
                       'filter': u'',
                       'recent-filters': None,
                       'sort-order': 'alpha',
                       'tree-state': {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': (0,)}}),
                     ('debug-io',
                      'wide',
                      1,
                      {}),
                     ('debug-probe',
                      'wide',
                      2,
                      {}),
                     ('debug-watch',
                      'wide',
                      1,
                      {}),
                     ('debug-modules',
                      'wide',
                      1,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'first-line': 761L,
                       'folded-linenos': [],
                       'history': {None: ['import rasterio\n',
        'from PIL import Image\n',
        'd=a\n',
        'import numpy as np\n',
        'is_white =np.sum(np.all(numpy_image == [255,255,255], axis=-1))/num'\
        'py_image.size\n',
        'is_white = np.sum(np.all(numpy_image == [255,255,255], axis=2))/(nu'\
        'mpy_image.shape[0] * numpy_image.shape[1])\n',
        'is_white = np.sum(np.all(white_pixels,0))/(numpy_image.shape[0] * n'\
        'umpy_image.shape[1])\n',
        'white_pixels = numpy_image == 255\n',
        'np.sum(white_pixels)\n',
        'np.sum(numpy_image == 255)\n',
        'numpy_image.size()\n',
        'numpy_image.size\n',
        'v\n',
        'i\n',
        'a=Image.open("/Users/ben/Downloads/26eb1254-7373-405e-b8df-85f83e72'\
        'f33b.png")\n',
        'a\n',
        ' numpy_image = np.array(a)\n',
        'is_white = white_pixels/(numpy_image.shape[0] * numpy_image.shape[1'\
        '])\n',
        'numpy_image.shape[0]\n',
        'white_pixels = np.sum(numpy_image == 255,0)\n',
        'white_pixels = np.sum(numpy_image == 255,1)\n',
        'white_pixels = np.sum(numpy_image == 255,2)\n',
        'white_pixels = np.all(np.sum(numpy_image == 255,2))\n',
        'np.sum(numpy_image == 255,2)\n',
        'numpy_image == 255\n',
        'white_pixels = np.sum(numpy_image == 255)\n',
        'numpy_image.shape\n',
        '1000 * 1000 * 3\n',
        'white_pixels = np.sum(numpy_image == 255,-1)\n',
        'white_pixels.shape\n',
        'np.sum(numpy_image == 255,-1) == 3\n',
        'white_pixels = np.sum(np.sum(numpy_image == 255,-1) == 3)\n',
        'white_pixels\n',
        'np.unique(img.reshape(-1, 3), axis=0, return_counts=True)\n',
        'np.unique(numpy_image.reshape(-1, 3), axis=0, return_counts=True)\n',
        'numpy_image.reshape(-1, 3)\n',
        'numpy_image.reshape(-1, 3) == [255,255,255]\n',
        'np.sum(numpy_image.reshape(-1, 3) == [255,255,255])\n',
        '(numpy_image.shape[0] * numpy_image.shape[1])\n',
        'img_reshaped = [255,255,255]\n',
        'img_reshaped = np.sum(img_reshaped == [255,255,255])/img_reshaped.s'\
        'hape[0]\n',
        'img_reshaped = numpy_image.reshape(-1, 3)\nimg_reshaped = np.sum(im'\
        'g_reshaped == [255,255,255])/img_reshaped.shape[0]\n\n',
        'img_reshaped\n',
        'd =  Image.open("/Users/ben/Downloads/04b1cf25-321f-4cb8-aba6-039c4'\
        'a8aa6dd.png")\n',
        'd\n',
        'numpy_image = np.array(d)\n',
        'numpy_image\n',
        'img_reshaped = numpy_image.reshape(-1, 3)\n',
        'is_white = np.sum(img_reshaped == [255,255,255])/img_reshaped.shape'\
        '[0]\n',
        'img_reshaped.shape[0]\n',
        'img_reshaped.shape\n',
        'np.sum(img_reshaped == [255,255,255],0)\n',
        'np.sum(img_reshaped == [255,255,255])\n',
        'img_reshaped.size\n',
        'is_white = np.sum(img_reshaped == [255,255,255])/img_reshaped.size'\
        '\n',
        'is_white\n',
        'is_black =np.sum(np.all(numpy_image == [255,255,255], axis=-1))/num'\
        'py_image.size\n',
        'is_black\n']},
                       'launch-id': None,
                       'sel-line': 769L,
                       'sel-line-start': 18914L,
                       'selection_end': 18914L,
                       'selection_start': 18914L,
                       'zoom': 0L}),
                     ('bookmarks',
                      'wide',
                      1,
                      {}),
                     ('messages',
                      'wide',
                      2,
                      {}),
                     ('os-command',
                      'wide',
                      1,
                      {})],
        'primary_view_state': {'editor_states': ({'bookmarks': ([[loc('manifest.py'),
        {'attrib-starts': [('main',
                            73)],
         'first-line': 80L,
         'folded-linenos': [],
         'sel-line': 93L,
         'sel-line-start': 2778L,
         'selection_end': 2787L,
         'selection_start': 2782L,
         'zoom': 0L},
        1585602876.841589],
        [loc('manifest.py'),
         {'attrib-starts': [],
          'first-line': 101L,
          'folded-linenos': [],
          'sel-line': 114L,
          'sel-line-start': 3364L,
          'selection_end': 3405L,
          'selection_start': 3400L,
          'zoom': 0L},
         1585604281.976554],
        [loc('manifest.py'),
         {'attrib-starts': [('find_files',
                             11)],
          'first-line': 11L,
          'folded-linenos': [],
          'sel-line': 14L,
          'sel-line-start': 340L,
          'selection_end': 355L,
          'selection_start': 355L,
          'zoom': 0L},
         1585605999.288375],
        [loc('../../DeepForest_Model/generate.py'),
         {'attrib-starts': [('generate_pretraining',
                             72)],
          'first-line': 146L,
          'folded-linenos': [],
          'sel-line': 159L,
          'sel-line-start': 6392L,
          'selection_end': 6401L,
          'selection_start': 6396L,
          'zoom': 0L},
         1585606003.270193],
        [loc('../../DeepForest_Model/generate.py'),
         {'attrib-starts': [('generate_pretraining',
                             72)],
          'first-line': 146L,
          'folded-linenos': [],
          'sel-line': 160L,
          'sel-line-start': 6445L,
          'selection_end': 6458L,
          'selection_start': 6453L,
          'zoom': 0L},
         1585606017.013012],
        [loc('../../NEON_crown_maps/utils/verify.py'),
         {'attrib-starts': [('check_RGB',
                             8)],
          'first-line': 3L,
          'folded-linenos': [],
          'sel-line': 19L,
          'sel-line-start': 499L,
          'selection_end': 558L,
          'selection_start': 558L,
          'zoom': 0L},
         1585606101.195436],
        [loc('manifest.py'),
         {'attrib-starts': [('find_files',
                             11)],
          'first-line': 10L,
          'folded-linenos': [],
          'sel-line': 20L,
          'sel-line-start': 517L,
          'selection_end': 525L,
          'selection_start': 525L,
          'zoom': 0L},
         1585607551.392853],
        [loc('../../NEON_crown_maps/utils/verify.py'),
         {'attrib-starts': [('check_RGB',
                             8)],
          'first-line': 3L,
          'folded-linenos': [],
          'sel-line': 19L,
          'sel-line-start': 499L,
          'selection_end': 577L,
          'selection_start': 577L,
          'zoom': 0L},
         1585607597.801849],
        [loc('manifest.py'),
         {'attrib-starts': [('find_files',
                             11)],
          'first-line': 10L,
          'folded-linenos': [],
          'sel-line': 22L,
          'sel-line-start': 563L,
          'selection_end': 687L,
          'selection_start': 563L,
          'zoom': 0L},
         1585607602.961513],
        [loc('../../NEON_crown_maps/utils/verify.py'),
         {'attrib-starts': [('check_RGB',
                             8)],
          'first-line': 3L,
          'folded-linenos': [],
          'sel-line': 21L,
          'sel-line-start': 583L,
          'selection_end': 587L,
          'selection_start': 587L,
          'zoom': 0L},
         1585607608.984621],
        [loc('manifest.py'),
         {'attrib-starts': [('find_files',
                             11)],
          'first-line': 10L,
          'folded-linenos': [],
          'sel-line': 22L,
          'sel-line-start': 563L,
          'selection_end': 687L,
          'selection_start': 563L,
          'zoom': 0L},
         1585607611.297077],
        [loc('../../NEON_crown_maps/utils/verify.py'),
         {'attrib-starts': [('check_RGB',
                             8)],
          'first-line': 3L,
          'folded-linenos': [],
          'sel-line': 13L,
          'sel-line-start': 317L,
          'selection_end': 328L,
          'selection_start': 328L,
          'zoom': 0L},
         1585607718.380623],
        [loc('submit_job.sbatch'),
         {'attrib-starts': [],
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 18L,
          'sel-line-start': 648L,
          'selection_end': 717L,
          'selection_start': 648L,
          'zoom': 0L},
         1585607832.853738],
        [loc('manifest.py'),
         {'attrib-starts': [('find_files',
                             11)],
          'first-line': 10L,
          'folded-linenos': [],
          'sel-line': 25L,
          'sel-line-start': 697L,
          'selection_end': 724L,
          'selection_start': 724L,
          'zoom': 0L},
         1585607835.863399],
        [loc('manifest.py'),
         {'attrib-starts': [('find_files',
                             11)],
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 21L,
          'sel-line-start': 526L,
          'selection_end': 562L,
          'selection_start': 562L,
          'zoom': 0L},
         1585608731.917853],
        [loc('../../DeepForest_Model/generate.py'),
         {'attrib-starts': [('generate_pretraining',
                             72)],
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 160L,
          'sel-line-start': 6445L,
          'selection_end': 6458L,
          'selection_start': 6453L,
          'zoom': 0L},
         1585608751.259144],
        [loc('tile_raster.py'),
         {'attrib-starts': [('parse_args',
                             8)],
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 9L,
          'sel-line-start': 195L,
          'selection_end': 232L,
          'selection_start': 232L,
          'zoom': 0L},
         1585608813.895231],
        [loc('manifest.py'),
         {'attrib-starts': [('find_files',
                             11)],
          'first-line': 23L,
          'folded-linenos': [],
          'sel-line': 36L,
          'sel-line-start': 1080L,
          'selection_end': 1144L,
          'selection_start': 1138L,
          'zoom': 0L},
         1585608815.987632],
        [loc('manifest.py'),
         {'attrib-starts': [('find_files',
                             11)],
          'first-line': 14L,
          'folded-linenos': [],
          'sel-line': 19L,
          'sel-line-start': 473L,
          'selection_end': 504L,
          'selection_start': 481L,
          'zoom': 0L},
         1585608826.4011],
        [loc('../../DeepForest_Model/generate.py'),
         {'attrib-starts': [('generate_pretraining',
                             72)],
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 160L,
          'sel-line-start': 6445L,
          'selection_end': 6458L,
          'selection_start': 6453L,
          'zoom': 0L},
         1585608827.216219]],
        20),
        'current-loc': loc('../../NEON_crown_maps/utils/verify.py'),
        'editor-state-list': [(loc('manifest.py'),
                               {'attrib-starts': [('find_files',
        11)],
                                'first-line': 14L,
                                'folded-linenos': [],
                                'sel-line': 19L,
                                'sel-line-start': 473L,
                                'selection_end': 504L,
                                'selection_start': 481L,
                                'zoom': 0L}),
                              (loc('cron.txt'),
                               {'attrib-starts': [],
                                'first-line': 0L,
                                'folded-linenos': [],
                                'sel-line': 0L,
                                'sel-line-start': 0L,
                                'selection_end': 26L,
                                'selection_start': 26L,
                                'zoom': 0L}),
                              (loc('submit_job.sbatch'),
                               {'attrib-starts': [],
                                'first-line': 0L,
                                'folded-linenos': [],
                                'sel-line': 18L,
                                'sel-line-start': 648L,
                                'selection_end': 717L,
                                'selection_start': 648L,
                                'zoom': 0L}),
                              (loc('../../DeepForest_Model/generate.py'),
                               {'attrib-starts': [('generate_pretraining',
        72)],
                                'first-line': 0L,
                                'folded-linenos': [],
                                'sel-line': 160L,
                                'sel-line-start': 6445L,
                                'selection_end': 6458L,
                                'selection_start': 6453L,
                                'zoom': 0L}),
                              (loc('../../NEON_crown_maps/utils/verify.py'),
                               {'attrib-starts': [('check_RGB',
        8)],
                                'first-line': 3L,
                                'folded-linenos': [],
                                'sel-line': 13L,
                                'sel-line-start': 317L,
                                'selection_end': 328L,
                                'selection_start': 328L,
                                'zoom': 0L}),
                              (loc('tile_raster.py'),
                               {'attrib-starts': [('parse_args',
        8)],
                                'first-line': 0L,
                                'folded-linenos': [],
                                'sel-line': 9L,
                                'sel-line-start': 195L,
                                'selection_end': 232L,
                                'selection_start': 232L,
                                'zoom': 0L})],
        'has-focus': True,
        'locked': False},
        [loc('manifest.py'),
         loc('cron.txt'),
         loc('submit_job.sbatch'),
         loc('../../DeepForest_Model/generate.py'),
         loc('../../NEON_crown_maps/utils/verify.py'),
         loc('tile_raster.py')]),
                               'open_files': [u'cron.txt',
        u'submit_job.sbatch',
        u'tile_raster.py',
        u'manifest.py',
        u'../../DeepForest_Model/generate.py',
        u'../../NEON_crown_maps/utils/verify.py']},
        'saved_notebook_display': None,
        'split_percents': {0: 0.5},
        'splits': 2,
        'tab_location': 'top',
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {0: 0.5},
                 'splits': 2,
                 'tab_location': 'left',
                 'user_data': {}},
        'window-alloc': (10,
                         23,
                         1398,
                         877)}]}
guimgr.recent-documents = [loc('../../NEON_crown_maps/utils/verify.py'),
                           loc('../../DeepForest_Model/generate.py'),
                           loc('manifest.py'),
                           loc('tile_raster.py')]
guimgr.visual-state = {loc('../../DeepForest_Model/GenerateAnchors.py'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 12L,
        'sel-line-start': 299L,
        'selection_end': 318L,
        'selection_start': 318L,
        'zoom': 0L},
                       loc('../../DeepForest_Model/generate.py'): {'attrib-s'\
        'tarts': [],
        'first-line': 225L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('upload.sh'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 1L,
        'sel-line-start': 31L,
        'selection_end': 157L,
        'selection_start': 31L,
        'zoom': 0L},
                       loc('../../NEON_crown_maps/main.py'): {'attrib-starts': [('g'\
        'enerate_tfrecord',
        69)],
        'first-line': 22L,
        'folded-linenos': [],
        'sel-line': 112L,
        'sel-line-start': 3934L,
        'selection_end': 3938L,
        'selection_start': 3938L,
        'zoom': 0L},
                       loc('../../NEON_crown_maps/predict.py'): {'attrib-sta'\
        'rts': [],
        'first-line': 102L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../NEON_crown_maps/utils/verify.py'): {'attri'\
        'b-starts': [],
        'first-line': 20L,
        'folded-linenos': [],
        'sel-line': 7L,
        'sel-line-start': 145L,
        'selection_end': 170L,
        'selection_start': 170L,
        'zoom': 0L},
                       loc('../../../miniconda3/envs/Zooniverse/lib/python3.6/site-packages/_pytest/python.py'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L}}
proj.build-cmd = {None: ('default',
                         None)}
proj.env-vars = {None: ('default',
                        [u''])}
proj.pyexec = {None: ('custom',
                      u'/Users/ben/miniconda3/envs/crowns/bin/python')}
proj.vcs-system-config = ('prefs',
                          {'bzr': {'versioncontrol.bzr.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.bzr.executable': u'bzr'},
                           'cvs': {'versioncontrol.cvs.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.cvs.executable': u'cvs',
                                   'versioncontrol.cvs.extra-global-args': '-'\
        'z3'},
                           'git': {'versioncontrol.git.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.git.executable': u'git',
                                   'versioncontrol.git.use-porcelain': True},
                           'hg': {'versioncontrol.hg.active': 'active-if-pro'\
        'ject-dir',
                                  'versioncontrol.hg.dont-find-unregistered': True,
                                  'versioncontrol.hg.executable': u'hg',
                                  'versioncontrol.hg.extra-global-args': '--'\
        'encoding=utf8'},
                           'perforce': {'versioncontrol.perforce.active': 'n'\
        'ot-active',
        'versioncontrol.perforce.dont-find-unregistered': True,
        'versioncontrol.perforce.executable': u'p4',
        'versioncontrol.perforce.extra-global-args': ''},
                           'svn': {'versioncontrol.svn.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.svn.executable': u'svn',
                                   'versioncontrol.svn.extra-global-args': '',
                                   'versioncontrol.svn.svnadmin-executable': u'svnadmin'}})
search.search-history = [u'bounds',
                         u'blank',
                         u'white',
                         u'print',
                         u'black',
                         u'args',
                         u'save_dir',
                         u'png',
                         u'mkdir',
                         u'connec',
                         u'connected',
                         u'tile_raster']
testing.stored-results = (1,
                          [(u'/Users/ben/Documents/EvergladesWadingBird/Zooniverse/tests/test_tile_raster.py',
                            [('test_run',
                              1,
                              None,
                              None,
                              ('',
                               "<ExceptionInfo AssertionError(\"assert False"\
                               "\\n +  where False = <function exists at 0x1"\
                               "085a2440>('output/SOAP_046_1.png')\\n +    w"\
                               "here...sts\\n +      where <module 'posixpat"\
                               "h' from '/Users/ben/miniconda3/envs/crowns/l"\
                               "ib/python3.7/posixpath.py'> = os.path\") tbl"\
                               "en=1>",
                               "AssertionError: assert False\n +  where Fals"\
                               "e = <function exists at 0x1085a2440>('output"\
                               "/SOAP_046_1.png')\n +    where <function exi"\
                               "sts at 0x1085a2440> = <module 'posixpath' fr"\
                               "om '/Users/ben/miniconda3/envs/crowns/lib/py"\
                               "thon3.7/posixpath.py'>.exists\n +      where"\
                               " <module 'posixpath' from '/Users/ben/minico"\
                               "nda3/envs/crowns/lib/python3.7/posixpath.py'"\
                               "> = os.path",
                               [(u'/Users/ben/Documents/EvergladesWadingBird/Zooniverse/tests/test_tile_raster.py',
                                 '/Users/ben/Documents/EvergladesWadingBird/'\
                                 'Zooniverse/tests/test_tile_raster.py',
                                 7,
                                 'test_run',
                                 None,
                                 '    assert os.path.exists("output/SOAP_046'\
                                 '_1.png")')],
                               0,
                               None,
                               None,
                               None,
                               None),
                              1584555830,
                              4)])],
                          {})
