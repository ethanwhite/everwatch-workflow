#!wing
#!version=6.0
##################################################################
# Wing IDE project file : User-specific branch                   #
##################################################################
[user attributes]
debug.breakpoints = {loc('tests/test_aggregate.py'): {31L: (0,
        None,
        1,
        0)}}
debug.exceptions-ignored = {loc('../../../miniconda3/envs/Zooniverse/lib/python3.7/site-packages/_pytest/_code/code.py'): {213: True},
                            loc('../../../miniconda3/envs/Zooniverse/lib/python3.7/site-packages/_pytest/config/__init__.py'): {1179: True},
                            loc('../../../miniconda3/envs/crowns/lib/python3.7/site-packages/_pytest/config/__init__.py'): {1130: True}}
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'LfPD5D2a8ynAK2sybEe3c4A0IQ'\
        'zTXQPX',
        'size-state': 'fullscreen',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [0,
                                   0],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.14898065865133303,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'expanded-nodes': [],
                                 'selected-nodes': [],
                                 'top-node': ()}},
        'tree-style': 'deep'}}),
                              ('browser',
                               'tall',
                               0,
                               {}),
                              ('snippets',
                               'tall',
                               0,
                               {}),
                              ('source-assistant',
                               'tall',
                               2,
                               {}),
                              ('debug-stack',
                               'tall',
                               1,
                               {}),
                              ('indent',
                               'tall',
                               2,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [5,
                          1],
        'notebook_display': 'normal',
        'notebook_percent': 0.5,
        'override_title': None,
        'pagelist': [('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 46,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': u'args',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 46,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': u'bounds',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False}}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('debug-exceptions',
                      'wide',
                      0,
                      {}),
                     ('debug-breakpoints',
                      'wide',
                      0,
                      {}),
                     ('testing',
                      'wide',
                      0,
                      {'added-files': [loc('tests/test_tile_raster.py'),
                                       loc('tests/test_aggregate.py')],
                       'filter': u'',
                       'recent-filters': None,
                       'sort-order': 'alpha',
                       'tree-state': {'expanded-nodes': [(0,),
        (0,
         0),
        (0,
         1),
        (0,
         2),
        (0,
         3)],
                                      'selected-nodes': [(0,)],
                                      'top-node': (0,)}}),
                     ('debug-io',
                      'wide',
                      1,
                      {}),
                     ('debug-probe',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'first-line': 1965L,
                       'folded-linenos': [],
                       'history': {u'file:/Applications/WingIDE.app/Contents/Resources/src/testing/runners/run_pytest_xml.py': ['b'\
        'oxes = annotation_dict["value"]\n',
        'boxes = pd.DataFrame(boxes)\n',
        'boxes.rename(columns = {"tool_label": "Species"})\n',
        'boxes\n',
        'box_list.append(pd.DataFrame(box))\n',
        'box_df = pd.concat(box_list)\n',
        'box_df\n',
        'x = csv_data.iloc[200]\n',
        'x = csv_data.iloc\n',
        'subject_data = aggregate.parse_subject_data(csv_data.iloc[20])\n',
        'subject_data.head()\n',
        'subject_data = aggregate.parse_subject_data(csv_data.subject_data.i'\
        'loc[40])\n',
        'subject_data\n',
        'x = subject_data\n',
        'x\n',
        'csv_data.subject_data.iloc[40]\n',
        'x = csv_data.subject_data.iloc[40]\n',
        'import json\n',
        'annotation_dict = json.loads(x)\n',
        'annotation_dict\n',
        'key = 41774677\n',
        "key = '41774677'\n",
        'data = annotation_dict[key]\n',
        'data["site"]\n',
        'site = os.path.splitext(os.path.basename(data["site"]))[0]\n',
        'site\n',
        'annotation_dict = json.loads(x)\nassert len(annotation_dict.keys())'\
        ' == 1\nfor key in annotation_dict:\n    data = annotation_dict[key]'\
        '\n    utm_left, utm_bottom, utm_right, utm_top = data["bounds"]\n  '\
        '  try:\n        site = os.path.splitext(os.path.basename(data["site'\
        '"]))[0]\n    except:   \n        site = np.nan\n    bounds = pd.Dat'\
        'aFrame({"utm_left": [utm_left], "utm_bottom":[utm_bottom],"utm_righ'\
        't":[utm_right],"utm_top":[utm_right],"site":site})\n\n',
        'merged = pd.DataFrame(row[["classification_id","user_name","created'\
        '_at"]], annotations,bounds)\n',
        'type(box)\n',
        'pd.DataFrame(box)\n',
        'box.to_frame\n',
        'box.to_frame()\n',
        'box_df = pd.DataFrame()\n',
        'box\n',
        'box_df.append(box,ignore_index=True)\n',
        'merged = pd.contact([row[["classification_id","user_name","created_'\
        'at"]], annotations,bounds])\n',
        'merged = pd.concat([row[["classification_id","user_name","created_a'\
        't"]], annotations,bounds])\n',
        'pd.concat()\n',
        'pd.concat([row[["classification_id","user_name","created_at"]],boun'\
        'ds])\n',
        'merged = pd.join([row[["classification_id","user_name","created_at"'\
        ']],bounds])\n',
        'row[["classification_id","user_name","created_at"]].join(bounds)\n',
        'pd.concat(row[["classification_id","user_name","created_at"]],bound'\
        's)\n',
        'row[["classification_id","user_name","created_at"]].to_frame\n',
        'merged = pd.concat(row[["classification_id","user_name","created_at'\
        '"]].to_frame,bounds)\n',
        'merged = pd.concat(row[["classification_id","user_name","created_at'\
        '"]].to_frame(),bounds.to_frame())\n',
        'row[["classification_id","user_name","created_at"]].to_frame().join'\
        '(bounds)\n',
        'row[["classification_id","user_name","created_at"]].to_frame().join'\
        '(bounds.to_frame())\n',
        'row[["classification_id","user_name","created_at"]].to_frame().join'\
        '(bounds\n\n',
        'merged = pd.concat([row["classification_id"],row["user_name"],row["'\
        'created_at"],bounds],axis=0)\n',
        'row["user_name"]\n',
        'row["classification_id"]\n',
        'merged = pd.DataFrame([row["classification_id"],row["user_name"],ro'\
        'w["created_at"],bounds],axis=0)\n',
        'merged = pd.DataFrame([row["classification_id"],row["user_name"],ro'\
        'w["created_at"],bounds])\n',
        'merged = pd.concat(row[["classification_id","user_name","created_at'\
        '"]],bounds)\n',
        'row[["classification_id","user_name","created_at"]]\n',
        'str(row[["classification_id","user_name","created_at"]])\n',
        'type(row[["classification_id","user_name","created_at"]])\n',
        'type(bounds)\n',
        'merged = pd.concat(row[["classification_id","user_name","created_at'\
        '"]].to_frame(),bounds)\n',
        'merged = pd.concat([row[["classification_id","user_name","created_a'\
        't"]].to_frame(),bounds])\n',
        'merged = pd.concat([row[["classification_id","user_name","created_a'\
        't"]].to_frame(),bounds,axis=0])\n',
        'merged = pd.concat([row[["classification_id","user_name","created_a'\
        't"]].to_frame(),bounds],axis=0)\n',
        'merged = pd.concat([row[["classification_id","user_name","created_a'\
        't"]].to_frame(),bounds],axis=1)\n',
        'row[["classification_id","user_name","created_at"]].to_frame()\n',
        'row[["classification_id","user_name","created_at"]].to_frame().shap'\
        'e\n',
        'merged = pd.concat([row[["classification_id","user_name","created_a'\
        't"]].to_frame().T,bounds],axis=1)\n',
        'merged.colum\n',
        'merged = pd.concat([row[["classification_id","user_name","created_a'\
        't"]].to_frame().T,bounds],axis=1,ignore_index=True)\n',
        'merged.shape\n',
        'merged.column\n',
        'merged = pd.concat([row[["classification_id","user_name","created_a'\
        't"]].to_frame().T,bounds],axis=0,ignore_index=True)\n',
        'merged\n',
        'merged.columns\n',
        'bounds["classification_id"] = row["classification_id"]\nbounds["use'\
        'r_name"] = row["user_name"]\nbounds["created_at"] = row["created_at'\
        '"]\n\n',
        'pd.concat([annotations,bounds])\n',
        'pd.concat([annotations,bounds],axis=1)\n',
        'annotations.shape\n',
        'bounds.shape\n',
        'pd.concat([annotations,bounds],axis=1,ignore_index=True)\n',
        'pd.concat([annotations,bounds],axis=1,ignore_index=True).columns\n',
        'pd.concat([annotations,bounds],axis=0,ignore_index=True)\n',
        'annotations.merge(bounds)\n',
        'annotations.join(bounds)\n',
        'annotations["classification_id"] = row["classification_id"]\nannota'\
        'tions["user_name"] = row["user_name"]\nannotations["created_at"] = '\
        'row["created_at"]\n\n',
        'bounds.join(annotations)\n',
        'pd.concat([bounds,annotations])\n',
        'pd.concat([bounds,annotations]).columns\n',
        'v\n',
        'annotations = parse_annotations(row.annotations)\n',
        'for col_name in bounds:\n    annotations[col_name] = bounds[col_nam'\
        'e]\n\n',
        'col_name\n',
        'bounds\n',
        'bounds[col_name]\n',
        'bounds[col_name].value\n',
        'bounds[col_name].values()\n',
        'bounds[col_name].values\n',
        'bounds[col_name].values[0]\n',
        '#Extract annotations for each image\nannotations = parse_annotation'\
        's(row.annotations)  \n\n#Extract subject data\nbounds = parse_subje'\
        'ct_data(row.subject_data)\n\n#Ugly, but works.\nannotations["classi'\
        'fication_id"] = row["classification_id"]\nannotations["user_name"] '\
        '= row["user_name"]\nannotations["created_at"] = row["created_at"]\n'\
        'for col_name in bounds:\n    annotations[col_name] = bounds[col_nam'\
        'e].values[0]\n\n',
        'annotations\n',
        'annotations.columns\n']},
                       'launch-id': None,
                       'sel-line': 1981L,
                       'sel-line-start': 240966L,
                       'selection_end': 240966L,
                       'selection_start': 240966L,
                       'zoom': 0L}),
                     ('debug-watch',
                      'wide',
                      1,
                      {}),
                     ('debug-modules',
                      'wide',
                      1,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'first-line': 181L,
                       'folded-linenos': [],
                       'history': {None: ['import rasterio\n',
        'from PIL import Image\n',
        'd=a\n',
        'import numpy as np\n',
        'is_white =np.sum(np.all(numpy_image == [255,255,255], axis=-1))/num'\
        'py_image.size\n',
        'is_white = np.sum(np.all(numpy_image == [255,255,255], axis=2))/(nu'\
        'mpy_image.shape[0] * numpy_image.shape[1])\n',
        'is_white = np.sum(np.all(white_pixels,0))/(numpy_image.shape[0] * n'\
        'umpy_image.shape[1])\n',
        'white_pixels = numpy_image == 255\n',
        'np.sum(white_pixels)\n',
        'np.sum(numpy_image == 255)\n',
        'numpy_image.size()\n',
        'numpy_image.size\n',
        'v\n',
        'i\n',
        'a=Image.open("/Users/ben/Downloads/26eb1254-7373-405e-b8df-85f83e72'\
        'f33b.png")\n',
        'a\n',
        ' numpy_image = np.array(a)\n',
        'is_white = white_pixels/(numpy_image.shape[0] * numpy_image.shape[1'\
        '])\n',
        'numpy_image.shape[0]\n',
        'white_pixels = np.sum(numpy_image == 255,0)\n',
        'white_pixels = np.sum(numpy_image == 255,1)\n',
        'white_pixels = np.sum(numpy_image == 255,2)\n',
        'white_pixels = np.all(np.sum(numpy_image == 255,2))\n',
        'np.sum(numpy_image == 255,2)\n',
        'numpy_image == 255\n',
        'white_pixels = np.sum(numpy_image == 255)\n',
        'numpy_image.shape\n',
        '1000 * 1000 * 3\n',
        'white_pixels = np.sum(numpy_image == 255,-1)\n',
        'white_pixels.shape\n',
        'np.sum(numpy_image == 255,-1) == 3\n',
        'white_pixels = np.sum(np.sum(numpy_image == 255,-1) == 3)\n',
        'white_pixels\n',
        'np.unique(img.reshape(-1, 3), axis=0, return_counts=True)\n',
        'np.unique(numpy_image.reshape(-1, 3), axis=0, return_counts=True)\n',
        'numpy_image.reshape(-1, 3)\n',
        'numpy_image.reshape(-1, 3) == [255,255,255]\n',
        'np.sum(numpy_image.reshape(-1, 3) == [255,255,255])\n',
        '(numpy_image.shape[0] * numpy_image.shape[1])\n',
        'img_reshaped = [255,255,255]\n',
        'img_reshaped = np.sum(img_reshaped == [255,255,255])/img_reshaped.s'\
        'hape[0]\n',
        'img_reshaped = numpy_image.reshape(-1, 3)\nimg_reshaped = np.sum(im'\
        'g_reshaped == [255,255,255])/img_reshaped.shape[0]\n\n',
        'img_reshaped\n',
        'd =  Image.open("/Users/ben/Downloads/04b1cf25-321f-4cb8-aba6-039c4'\
        'a8aa6dd.png")\n',
        'd\n',
        'numpy_image = np.array(d)\n',
        'numpy_image\n',
        'img_reshaped = numpy_image.reshape(-1, 3)\n',
        'is_white = np.sum(img_reshaped == [255,255,255])/img_reshaped.shape'\
        '[0]\n',
        'img_reshaped.shape[0]\n',
        'img_reshaped.shape\n',
        'np.sum(img_reshaped == [255,255,255],0)\n',
        'np.sum(img_reshaped == [255,255,255])\n',
        'img_reshaped.size\n',
        'is_white = np.sum(img_reshaped == [255,255,255])/img_reshaped.size'\
        '\n',
        'is_white\n',
        'is_black =np.sum(np.all(numpy_image == [255,255,255], axis=-1))/num'\
        'py_image.size\n',
        'is_black\n',
        'import os\n',
        'os.getcwd()\n',
        'import aggregate\n',
        'df = aggregate.load_classifications("data/species-classifications.c'\
        'sv",CURRENT_VERSION)\n',
        'df = aggregate.load_classifications("tests/data/species-classificat'\
        'ions.csv",CURRENT_VERSION)\n',
        'classifications_file = "tests/data/species-classifications.csv"\n',
        'import pandas as pd\n',
        'df.version\n',
        'df  = df[df.workflow_version == version]\n',
        'df.shape\n',
        'df.head()\n',
        'CURRENT_VERSION = 91.123\n',
        'version = CURRENT_VERSION\n',
        'df = pd.read_csv(classifications_file)\ndf  = df[df.workflow_versio'\
        'n == version]\n\n',
        'df.workflow_version\n',
        'df.workflow_version.unique()\n',
        'version\n',
        'df[df.workflow_version == version] \n',
        'df.workflow_version.iloc[2000]\n',
        'df.workflow_version == version\n',
        'df.workflow_version.iloc[200]\n',
        'min_version = 91.123\n',
        'df  = df[df.workflow_version > min_version]\n',
        'df = pd.read_csv(classifications_file)\n',
        'df\n',
        'df.workflow_version.iloc[300]\n']},
                       'launch-id': None,
                       'sel-line': 202L,
                       'sel-line-start': 8603L,
                       'selection_end': 8630L,
                       'selection_start': 8630L,
                       'zoom': 0L}),
                     ('bookmarks',
                      'wide',
                      1,
                      {}),
                     ('messages',
                      'wide',
                      2,
                      {}),
                     ('os-command',
                      'wide',
                      1,
                      {})],
        'primary_view_state': {'editor_states': ({'bookmarks': ([[loc('../../../miniconda3/envs/Zooniverse/lib/python3.7/site-packages/pandas/core/reshape/concat.py'),
        {'attrib-starts': [('_Concatenator',
                            286),
                           ('_Concatenator.__init__',
                            291)],
         'first-line': 312L,
         'folded-linenos': [],
         'sel-line': 325L,
         'sel-line-start': 9563L,
         'selection_end': 9563L,
         'selection_start': 9563L,
         'zoom': 0L},
        1585885553.46552],
        [loc('aggregate.py'),
         {'attrib-starts': [('parse_file',
                             52)],
          'first-line': 57L,
          'folded-linenos': [],
          'sel-line': 67L,
          'sel-line-start': 1965L,
          'selection_end': 2063L,
          'selection_start': 1965L,
          'zoom': 0L},
         1585885559.514432],
        [loc('../../../miniconda3/envs/Zooniverse/lib/python3.7/site-packages/pandas/core/reshape/concat.py'),
         {'attrib-starts': [('_Concatenator',
                             286),
                            ('_Concatenator.__init__',
                             291)],
          'first-line': 303L,
          'folded-linenos': [],
          'sel-line': 308L,
          'sel-line-start': 9038L,
          'selection_end': 9038L,
          'selection_start': 9038L,
          'zoom': 0L},
         1585885586.557334],
        [loc('../../../miniconda3/envs/Zooniverse/lib/python3.7/site-packages/pandas/core/generic.py'),
         {'attrib-starts': [('NDFrame',
                             150),
                            ('NDFrame.__getattr__',
                             5256)],
          'first-line': 5260L,
          'folded-linenos': [],
          'sel-line': 5273L,
          'sel-line-start': 176248L,
          'selection_end': 176248L,
          'selection_start': 176248L,
          'zoom': 0L},
         1585885613.58839],
        [loc('aggregate.py'),
         {'attrib-starts': [('parse_file',
                             52)],
          'first-line': 57L,
          'folded-linenos': [],
          'sel-line': 67L,
          'sel-line-start': 1978L,
          'selection_end': 2082L,
          'selection_start': 1978L,
          'zoom': 0L},
         1585885719.204519],
        [loc('../../../miniconda3/envs/Zooniverse/lib/python3.7/site-packages/pandas/core/reshape/concat.py'),
         {'attrib-starts': [('_Concatenator',
                             286),
                            ('_Concatenator.__init__',
                             291)],
          'first-line': 341L,
          'folded-linenos': [],
          'sel-line': 356L,
          'sel-line-start': 10602L,
          'selection_end': 10602L,
          'selection_start': 10602L,
          'zoom': 0L},
         1585885724.020716],
        [loc('aggregate.py'),
         {'attrib-starts': [('parse_file',
                             52)],
          'first-line': 57L,
          'folded-linenos': [],
          'sel-line': 67L,
          'sel-line-start': 1965L,
          'selection_end': 2052L,
          'selection_start': 1965L,
          'zoom': 0L},
         1585885801.604463],
        [loc('../../../miniconda3/envs/Zooniverse/lib/python3.7/site-packages/pandas/core/reshape/concat.py'),
         {'attrib-starts': [('_Concatenator',
                             286),
                            ('_Concatenator.__init__',
                             291)],
          'first-line': 303L,
          'folded-linenos': [],
          'sel-line': 308L,
          'sel-line-start': 9038L,
          'selection_end': 9038L,
          'selection_start': 9038L,
          'zoom': 0L},
         1585885804.383484],
        [loc('aggregate.py'),
         {'attrib-starts': [('parse_file',
                             52)],
          'first-line': 57L,
          'folded-linenos': [],
          'sel-line': 67L,
          'sel-line-start': 1965L,
          'selection_end': 2063L,
          'selection_start': 1965L,
          'zoom': 0L},
         1585885897.659488],
        [loc('../../../miniconda3/envs/Zooniverse/lib/python3.7/site-packages/pandas/core/reshape/concat.py'),
         {'attrib-starts': [('_Concatenator',
                             286),
                            ('_Concatenator.__init__',
                             291)],
          'first-line': 303L,
          'folded-linenos': [],
          'sel-line': 308L,
          'sel-line-start': 9038L,
          'selection_end': 9038L,
          'selection_start': 9038L,
          'zoom': 0L},
         1585885903.57819],
        [loc('aggregate.py'),
         {'attrib-starts': [('parse_file',
                             52)],
          'first-line': 57L,
          'folded-linenos': [],
          'sel-line': 67L,
          'sel-line-start': 1965L,
          'selection_end': 2092L,
          'selection_start': 1965L,
          'zoom': 0L},
         1585885967.738669],
        [loc('../../../miniconda3/envs/Zooniverse/lib/python3.7/site-packages/pandas/core/generic.py'),
         {'attrib-starts': [('NDFrame',
                             150),
                            ('NDFrame.__getattr__',
                             5256)],
          'first-line': 5260L,
          'folded-linenos': [],
          'sel-line': 5273L,
          'sel-line-start': 176248L,
          'selection_end': 176248L,
          'selection_start': 176248L,
          'zoom': 0L},
         1585885984.503231],
        [loc('aggregate.py'),
         {'attrib-starts': [('parse_file',
                             52)],
          'first-line': 57L,
          'folded-linenos': [],
          'sel-line': 67L,
          'sel-line-start': 1965L,
          'selection_end': 2092L,
          'selection_start': 1965L,
          'zoom': 0L},
         1585885988.869131],
        [loc('../../../miniconda3/envs/Zooniverse/lib/python3.7/site-packages/pandas/core/generic.py'),
         {'attrib-starts': [('NDFrame',
                             150),
                            ('NDFrame.__getattr__',
                             5256)],
          'first-line': 5260L,
          'folded-linenos': [],
          'sel-line': 5273L,
          'sel-line-start': 176248L,
          'selection_end': 176248L,
          'selection_start': 176248L,
          'zoom': 0L},
         1585886000.725468],
        [loc('aggregate.py'),
         {'attrib-starts': [('parse_file',
                             52)],
          'first-line': 64L,
          'folded-linenos': [],
          'sel-line': 71L,
          'sel-line-start': 2128L,
          'selection_end': 2162L,
          'selection_start': 2128L,
          'zoom': 0L},
         1585886179.943434],
        [loc('../../../miniconda3/envs/Zooniverse/lib/python3.7/site-packages/pandas/core/reshape/merge.py'),
         {'attrib-starts': [('_MergeOperation',
                             545),
                            ('_MergeOperation._validate_specification',
                             1174)],
          'first-line': 1182L,
          'folded-linenos': [],
          'sel-line': 1197L,
          'sel-line-start': 42152L,
          'selection_end': 42152L,
          'selection_start': 42152L,
          'zoom': 0L},
         1585886181.695943],
        [loc('aggregate.py'),
         {'attrib-starts': [('parse_file',
                             52)],
          'first-line': 62L,
          'folded-linenos': [],
          'sel-line': 70L,
          'sel-line-start': 2134L,
          'selection_end': 2154L,
          'selection_start': 2154L,
          'zoom': 0L},
         1585886385.170472],
        [loc('../../../miniconda3/envs/Zooniverse/lib/python3.7/site-packages/pandas/core/reshape/merge.py'),
         {'attrib-starts': [('_items_overlap_with_suffix',
                             2011)],
          'first-line': 2012L,
          'folded-linenos': [],
          'sel-line': 2025L,
          'sel-line-start': 70008L,
          'selection_end': 70008L,
          'selection_start': 70008L,
          'zoom': 0L},
         1585886399.345982],
        [loc('aggregate.py'),
         {'attrib-starts': [('parse_file',
                             52)],
          'first-line': 57L,
          'folded-linenos': [],
          'sel-line': 71L,
          'sel-line-start': 2166L,
          'selection_end': 2222L,
          'selection_start': 2222L,
          'zoom': 0L},
         1585886619.647663],
        [loc('../../../miniconda3/envs/Zooniverse/lib/python3.7/site-packages/pandas/core/generic.py'),
         {'attrib-starts': [('NDFrame',
                             150),
                            ('NDFrame.__getattr__',
                             5256)],
          'first-line': 5260L,
          'folded-linenos': [],
          'sel-line': 5273L,
          'sel-line-start': 176248L,
          'selection_end': 176248L,
          'selection_start': 176248L,
          'zoom': 0L},
         1585886632.467316]],
        20),
        'current-loc': loc('aggregate.py'),
        'editor-state-list': [(loc('aggregate.py'),
                               {'attrib-starts': [('parse_file',
        52)],
                                'first-line': 20L,
                                'folded-linenos': [],
                                'sel-line': 71L,
                                'sel-line-start': 2166L,
                                'selection_end': 2197L,
                                'selection_start': 2197L,
                                'zoom': 0L}),
                              (loc('tests/test_aggregate.py'),
                               {'attrib-starts': [('test_parse_subject_data',
        24)],
                                'first-line': 10L,
                                'folded-linenos': [],
                                'sel-line': 27L,
                                'sel-line-start': 799L,
                                'selection_end': 803L,
                                'selection_start': 803L,
                                'zoom': 0L}),
                              (loc('../../NEON_crown_maps/tests/test_sampling.py'),
                               {'attrib-starts': [],
                                'first-line': 0L,
                                'folded-linenos': [],
                                'sel-line': 2L,
                                'sel-line-start': 25L,
                                'selection_end': 132L,
                                'selection_start': 25L,
                                'zoom': 0L}),
                              (loc('../../../miniconda3/envs/Zooniverse/lib/python3.7/site-packages/pandas/core/generic.py'),
                               {'attrib-starts': [('NDFrame',
        150),
        ('NDFrame.__getattr__',
         5256)],
                                'first-line': 5260L,
                                'folded-linenos': [],
                                'sel-line': 5273L,
                                'sel-line-start': 176248L,
                                'selection_end': 176248L,
                                'selection_start': 176248L,
                                'zoom': 0L})],
        'has-focus': False,
        'locked': False},
        [loc('aggregate.py'),
         loc('tests/test_aggregate.py'),
         loc('../../NEON_crown_maps/tests/test_sampling.py'),
         loc('../../../miniconda3/envs/Zooniverse/lib/python3.7/site-packages/pandas/core/generic.py')]),
                               'open_files': [u'tests/test_aggregate.py',
        u'../../NEON_crown_maps/tests/test_sampling.py',
        u'../../../miniconda3/envs/Zooniverse/lib/python3.7/site-packages/pandas/core/generic.py',
        u'aggregate.py']},
        'saved_notebook_display': None,
        'split_percents': {0: 0.23318938926588526},
        'splits': 2,
        'tab_location': 'top',
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {0: 0.5},
                 'splits': 2,
                 'tab_location': 'left',
                 'user_data': {}},
        'window-alloc': (1440,
                         0,
                         1920,
                         1080)}]}
guimgr.recent-documents = [loc('aggregate.py'),
                           loc('../../../miniconda3/envs/Zooniverse/lib/python3.7/site-packages/pandas/core/generic.py'),
                           loc('../../../miniconda3/envs/Zooniverse/lib/python3.7/site-packages/pandas/core/reshape/merge.py')]
guimgr.visual-state = {loc('../../DeepForest_Model/GenerateAnchors.py'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 12L,
        'sel-line-start': 299L,
        'selection_end': 318L,
        'selection_start': 318L,
        'zoom': 0L},
                       loc('../../DeepForest_Model/generate.py'): {'attrib-s'\
        'tarts': [],
        'first-line': 225L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('cron.txt'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 5L,
        'sel-line-start': 281L,
        'selection_end': 304L,
        'selection_start': 304L,
        'zoom': 0L},
                       loc('upload.sh'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 1L,
        'sel-line-start': 31L,
        'selection_end': 157L,
        'selection_start': 31L,
        'zoom': 0L},
                       loc('../../NEON_crown_maps/main.py'): {'attrib-starts': [('g'\
        'enerate_tfrecord',
        69)],
        'first-line': 22L,
        'folded-linenos': [],
        'sel-line': 112L,
        'sel-line-start': 3934L,
        'selection_end': 3938L,
        'selection_start': 3938L,
        'zoom': 0L},
                       loc('../../NEON_crown_maps/predict.py'): {'attrib-sta'\
        'rts': [],
        'first-line': 102L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../../miniconda3/envs/Zooniverse/lib/python3.6/site-packages/_pytest/python.py'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L}}
proj.build-cmd = {None: ('default',
                         None)}
proj.env-vars = {None: ('default',
                        [u''])}
proj.pyexec = {None: ('custom',
                      u'/Users/ben/miniconda3/envs/Zooniverse/bin/python')}
proj.vcs-system-config = ('prefs',
                          {'bzr': {'versioncontrol.bzr.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.bzr.executable': u'bzr'},
                           'cvs': {'versioncontrol.cvs.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.cvs.executable': u'cvs',
                                   'versioncontrol.cvs.extra-global-args': '-'\
        'z3'},
                           'git': {'versioncontrol.git.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.git.executable': u'git',
                                   'versioncontrol.git.use-porcelain': True},
                           'hg': {'versioncontrol.hg.active': 'active-if-pro'\
        'ject-dir',
                                  'versioncontrol.hg.dont-find-unregistered': True,
                                  'versioncontrol.hg.executable': u'hg',
                                  'versioncontrol.hg.extra-global-args': '--'\
        'encoding=utf8'},
                           'perforce': {'versioncontrol.perforce.active': 'n'\
        'ot-active',
        'versioncontrol.perforce.dont-find-unregistered': True,
        'versioncontrol.perforce.executable': u'p4',
        'versioncontrol.perforce.extra-global-args': ''},
                           'svn': {'versioncontrol.svn.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.svn.executable': u'svn',
                                   'versioncontrol.svn.extra-global-args': '',
                                   'versioncontrol.svn.svnadmin-executable': u'svnadmin'}})
search.search-history = [u'bounds',
                         u'blank',
                         u'white',
                         u'print',
                         u'black',
                         u'args',
                         u'save_dir',
                         u'png',
                         u'mkdir',
                         u'connec',
                         u'connected',
                         u'tile_raster']
testing.run-as-package-module = {None: False}
testing.stored-results = (1,
                          [(u'/Users/ben/Documents/EvergladesWadingBird/Zooniverse/tests/test_tile_raster.py',
                            [('test_run',
                              1,
                              None,
                              None,
                              ('',
                               "<ExceptionInfo AssertionError(\"assert False"\
                               "\\n +  where False = <function exists at 0x1"\
                               "085a2440>('output/SOAP_046_1.png')\\n +    w"\
                               "here...sts\\n +      where <module 'posixpat"\
                               "h' from '/Users/ben/miniconda3/envs/crowns/l"\
                               "ib/python3.7/posixpath.py'> = os.path\") tbl"\
                               "en=1>",
                               "AssertionError: assert False\n +  where Fals"\
                               "e = <function exists at 0x1085a2440>('output"\
                               "/SOAP_046_1.png')\n +    where <function exi"\
                               "sts at 0x1085a2440> = <module 'posixpath' fr"\
                               "om '/Users/ben/miniconda3/envs/crowns/lib/py"\
                               "thon3.7/posixpath.py'>.exists\n +      where"\
                               " <module 'posixpath' from '/Users/ben/minico"\
                               "nda3/envs/crowns/lib/python3.7/posixpath.py'"\
                               "> = os.path",
                               [(u'/Users/ben/Documents/EvergladesWadingBird/Zooniverse/tests/test_tile_raster.py',
                                 '/Users/ben/Documents/EvergladesWadingBird/'\
                                 'Zooniverse/tests/test_tile_raster.py',
                                 7,
                                 'test_run',
                                 None,
                                 '    assert os.path.exists("output/SOAP_046'\
                                 '_1.png")')],
                               0,
                               None,
                               None,
                               None,
                               None),
                              1584555830,
                              4)]),
                           (u'/Users/ben/Documents/EvergladesWadingBird/Zooniverse/tests/test_aggregate.py',
                            [('test_parse_annotations',
                              1,
                              None,
                              None,
                              ('',
                               "<ExceptionInfo AssertionError('assert (0, 0)"\
                               " == (1, 8)\\n  At index 0 diff: 0 != 1\\n  F"\
                               "ull diff:\\n  - (1, 8)\\n  + (0, 0)') tblen="\
                               "1>",
                               'AssertionError: assert (0, 0) == (1, 8)\n  A'\
                               't index 0 diff: 0 != 1\n  Full diff:\n  - (1'\
                               ', 8)\n  + (0, 0)',
                               [(u'/Users/ben/Documents/EvergladesWadingBird/Zooniverse/tests/test_aggregate.py',
                                 '/Users/ben/Documents/EvergladesWadingBird/'\
                                 'Zooniverse/tests/test_aggregate.py',
                                 22,
                                 'test_parse_annotations',
                                 None,
                                 '    assert annotations.shape == (1,8)')],
                               0,
                               None,
                               None,
                               None,
                               None),
                              1585884669,
                              20),
                             ('test_parse_subject_data',
                              0,
                              None,
                              None,
                              None,
                              1585884669,
                              24),
                             ('test_load_classifications',
                              0,
                              None,
                              None,
                              None,
                              1585884669,
                              16),
                             ('test_parse_file',
                              1,
                              None,
                              None,
                              ('',
                               "<ExceptionInfo ValueError('Index data must b"\
                               "e 1-dimensional') tblen=8>",
                               'ValueError: Index data must be 1-dimensional',
                               [(u'/Users/ben/Documents/EvergladesWadingBird/Zooniverse/tests/test_aggregate.py',
                                 '/Users/ben/Documents/EvergladesWadingBird/'\
                                 'Zooniverse/tests/test_aggregate.py',
                                 29,
                                 'test_parse_file',
                                 None,
                                 '    df = aggregate.parse_file("data/specie'\
                                 's-classifications.csv",min_version)'),
                                (u'/Users/ben/Documents/EvergladesWadingBird/Zooniverse/aggregate.py',
                                 '/Users/ben/Documents/EvergladesWadingBird/'\
                                 'Zooniverse/aggregate.py',
                                 65,
                                 'parse_file',
                                 None,
                                 '        merged = pd.DataFrame(row[["classi'\
                                 'fication_id","user_name","created_at"]], a'\
                                 'nnotations,bounds)'),
                                (u'/Users/ben/miniconda3/envs/Zooniverse/lib/python3.7/site-packages/pandas/core/frame.py',
                                 '/Users/ben/miniconda3/envs/Zooniverse/lib/'\
                                 'python3.7/site-packages/pandas/core/frame.'\
                                 'py',
                                 461,
                                 '__init__',
                                 None,
                                 '                mgr = init_dict({data.name'\
                                 ': data}, index, columns, dtype=dtype)'),
                                (u'/Users/ben/miniconda3/envs/Zooniverse/lib/python3.7/site-packages/pandas/core/internals/construction.py',
                                 '/Users/ben/miniconda3/envs/Zooniverse/lib/'\
                                 'python3.7/site-packages/pandas/core/intern'\
                                 'als/construction.py',
                                 229,
                                 'init_dict',
                                 None,
                                 '            index = ensure_index(index)'),
                                (u'/Users/ben/miniconda3/envs/Zooniverse/lib/python3.7/site-packages/pandas/core/indexes/base.py',
                                 '/Users/ben/miniconda3/envs/Zooniverse/lib/'\
                                 'python3.7/site-packages/pandas/core/indexe'\
                                 's/base.py',
                                 5356,
                                 'ensure_index',
                                 None,
                                 '    return Index(index_like)'),
                                (u'/Users/ben/miniconda3/envs/Zooniverse/lib/python3.7/site-packages/pandas/core/indexes/base.py',
                                 '/Users/ben/miniconda3/envs/Zooniverse/lib/'\
                                 'python3.7/site-packages/pandas/core/indexe'\
                                 's/base.py',
                                 419,
                                 '__new__',
                                 None,
                                 '            return Index(np.asarray(data),'\
                                 ' dtype=dtype, copy=copy, name=name, **kwar'\
                                 'gs)'),
                                (u'/Users/ben/miniconda3/envs/Zooniverse/lib/python3.7/site-packages/pandas/core/indexes/base.py',
                                 '/Users/ben/miniconda3/envs/Zooniverse/lib/'\
                                 'python3.7/site-packages/pandas/core/indexe'\
                                 's/base.py',
                                 393,
                                 '__new__',
                                 None,
                                 '                return Float64Index(data, '\
                                 'copy=copy, dtype=dtype, name=name)'),
                                (u'/Users/ben/miniconda3/envs/Zooniverse/lib/python3.7/site-packages/pandas/core/indexes/numeric.py',
                                 '/Users/ben/miniconda3/envs/Zooniverse/lib/'\
                                 'python3.7/site-packages/pandas/core/indexe'\
                                 's/numeric.py',
                                 77,
                                 '__new__',
                                 None,
                                 '            raise ValueError("Index data m'\
                                 'ust be 1-dimensional")')],
                               0,
                               None,
                               None,
                               None,
                               None),
                              1585884669,
                              28)])],
                          {})
