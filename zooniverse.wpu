#!wing
#!version=6.0
##################################################################
# Wing IDE project file : User-specific branch                   #
##################################################################
[user attributes]
debug.exceptions-ignored = {loc('../../../miniconda3/envs/Zooniverse/lib/python3.7/site-packages/_pytest/_code/code.py'): {213: True},
                            loc('../../../miniconda3/envs/Zooniverse/lib/python3.7/site-packages/_pytest/config/__init__.py'): {1179: True},
                            loc('../../../miniconda3/envs/crowns/lib/python3.7/site-packages/_pytest/config/__init__.py'): {1130: True}}
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'LfPD5D2a8ynAK2sybEe3c4A0IQ'\
        'zTXQPX',
        'size-state': 'fullscreen',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [0,
                                   0],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.14898065865133303,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'expanded-nodes': [],
                                 'selected-nodes': [],
                                 'top-node': ()}},
        'tree-style': 'deep'}}),
                              ('browser',
                               'tall',
                               0,
                               {}),
                              ('snippets',
                               'tall',
                               0,
                               {}),
                              ('source-assistant',
                               'tall',
                               2,
                               {}),
                              ('debug-stack',
                               'tall',
                               1,
                               {}),
                              ('indent',
                               'tall',
                               2,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [3,
                          1],
        'notebook_display': 'normal',
        'notebook_percent': 0.5,
        'override_title': None,
        'pagelist': [('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 46,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': u'args',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 46,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': u'bounds',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False}}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('debug-exceptions',
                      'wide',
                      0,
                      {}),
                     ('debug-breakpoints',
                      'wide',
                      0,
                      {}),
                     ('testing',
                      'wide',
                      0,
                      {'added-files': [loc('tests/test_tile_raster.py'),
                                       loc('tests/test_aggregate.py')],
                       'filter': u'',
                       'recent-filters': None,
                       'sort-order': 'alpha',
                       'tree-state': {'expanded-nodes': [(0,),
        (0,
         0),
        (0,
         1)],
                                      'selected-nodes': [(0,
        0)],
                                      'top-node': (0,)}}),
                     ('debug-io',
                      'wide',
                      1,
                      {}),
                     ('debug-probe',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'first-line': 897L,
                       'folded-linenos': [],
                       'history': {u'file:/Applications/WingIDE.app/Contents/Resources/src/testing/runners/run_pytest_xml.py': ['d'\
        'f.workflow_version\n',
        'df.workflow_version.iloc[100]\n',
        'df.workflow_version.iloc[300]\n',
        'df.workflow_version.iloc[340]\n',
        'df.workflow_version.iloc[440]\n',
        'df.workflow_version.iloc[379]\n',
        'df.workflow_version.iloc[378]\n',
        'unjson_dataframe(df)\n',
        'df.data\n',
        'df.columsn\n',
        'unjson_dataframe(df, "annotations")\n',
        'df.annotations.iloc[0]\n',
        'a = df.annotations.iloc[300]\n',
        'json.loads(a)[0]\n',
        'json.loads(a)\n',
        'json.loads(a)[1]\n',
        'annotation_dict = json.loads(a)[0]\n',
        'annotation_dict.keys\n',
        'annotation_dict["task"]\n',
        'annotation_dict["task_label"]\n',
        'pd.Dataframe(annotation_dict["value"])\n',
        'pd.DataFrame(annotation_dict["value"])\n',
        'boxes = pd.DataFrame(boxes)\n',
        'boxes = annotation_dict["value"]\nboxes = pd.DataFrame(boxes)\n\n',
        'boxes.tool_label\n',
        'boxes.rename({"tool_label": "Species"})\n',
        'boxes.rename("columns",{"tool_label": "Species"})\n',
        'boxes.rename(columns = {"tool_label": "Species"})\n',
        'boxes.x\n',
        'boxes.y\n',
        'boxes.tool\n',
        'boxes.height\n',
        'boxes.width\n',
        'boxes.details\n',
        'boxes.frame\n',
        'a\n',
        'df.annotations.iloc[200]\n',
        'df.annotations.iloc[380]\n',
        'df.annotations.iloc[355]\n',
        'df.annotations.iloc[300]\n',
        'df.annotations.iloc[350]\n',
        'df.annotations.iloc[360]\n',
        'df.annotations.iloc[370]\n',
        'df.annotations.iloc[371]\n',
        'df.annotations.iloc[372]\n',
        'df.annotations.iloc[373]\n',
        'df.annotations.iloc[374]\n',
        'df.annotations.iloc[375]\n',
        'df.annotations.iloc[376]\n',
        'df.annotations.iloc[377]\n',
        'df.annotations.iloc[378]\n',
        'df.annotations.iloc[100]\n',
        'df.annotations.length\n',
        'df.annotations.iloc[10]\n',
        'df.annotations.iloc[9]\n',
        'df.annotations.apply(len)\n',
        'df.annotations.iloc[11]\n',
        'df.annotations.iloc[20]\n',
        'df[df.annotations == [{"task":"T0","task_label":"Species","value":['\
        ']}]]\n',
        'df[df.annotations == "[{"task":"T0","task_label":"Species","value":'\
        '[]}]"]\n',
        "df[df.annotations == '[{\"task\":\"T0\",\"task_label\":\"Species\""\
        ",\"value\":[]}]']\n",
        "df = df[df.annotations == '[{\"task\":\"T0\",\"task_label\":\"Speci"\
        "es\",\"value\":[]}]']\n",
        'df = load_classifications(classifications_file, version)\n',
        'classifications_file\n',
        'boxes.columns\n',
        'df  = df[df.workflow_version > version]\n',
        'df\n',
        "df = df[~df.annotations == '[{\"task\":\"T0\",\"task_label\":\"Spec"\
        "ies\",\"value\":[]}]']\n",
        "df = df[~(df.annotations == '[{\"task\":\"T0\",\"task_label\":\"Spe"\
        "cies\",\"value\":[]}]')]\n",
        'df.shape\n',
        'df.annotations\n',
        'df.annotations.iloc[1]\n',
        'x = df.annotations.iloc[1]\n',
        'import josn\n',
        'import json\n',
        'annotation_dict = json.loads(x)[0]\n',
        'annotation_dict\n',
        'len(annotation_dict)\n',
        'annotation_dict.keys()\n',
        'annotation_dict["value"]\n',
        'annotation_dict["value"][0]\n',
        'annotation_dict["value"][2]\n',
        'annotation_dict["value"][1]\n',
        '["a"] + ["b"]\n',
        '["a"].append(["b"])\n',
        'g=["a"]\n',
        'g.append(["b"])\n',
        'g\n',
        'df.head()\n',
        'df.classification_id[0]\n',
        'df.classification_idi[0]\n',
        'df.classification_id.iloc[0]\n',
        'df.classification_id.iloc[1]\n',
        'df.classification_id.iloc[10]\n',
        'df.subject_data[0]\n',
        'df.subject_data.iloc[0]\n',
        'df.subject_ids\n',
        'df.columns\n',
        'df.metadata\n',
        'df.metadata.iloc[0]\n']},
                       'launch-id': None,
                       'sel-line': 908L,
                       'sel-line-start': 186299L,
                       'selection_end': 186299L,
                       'selection_start': 186299L,
                       'zoom': 0L}),
                     ('debug-watch',
                      'wide',
                      1,
                      {}),
                     ('debug-modules',
                      'wide',
                      1,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'first-line': 181L,
                       'folded-linenos': [],
                       'history': {None: ['import rasterio\n',
        'from PIL import Image\n',
        'd=a\n',
        'import numpy as np\n',
        'is_white =np.sum(np.all(numpy_image == [255,255,255], axis=-1))/num'\
        'py_image.size\n',
        'is_white = np.sum(np.all(numpy_image == [255,255,255], axis=2))/(nu'\
        'mpy_image.shape[0] * numpy_image.shape[1])\n',
        'is_white = np.sum(np.all(white_pixels,0))/(numpy_image.shape[0] * n'\
        'umpy_image.shape[1])\n',
        'white_pixels = numpy_image == 255\n',
        'np.sum(white_pixels)\n',
        'np.sum(numpy_image == 255)\n',
        'numpy_image.size()\n',
        'numpy_image.size\n',
        'v\n',
        'i\n',
        'a=Image.open("/Users/ben/Downloads/26eb1254-7373-405e-b8df-85f83e72'\
        'f33b.png")\n',
        'a\n',
        ' numpy_image = np.array(a)\n',
        'is_white = white_pixels/(numpy_image.shape[0] * numpy_image.shape[1'\
        '])\n',
        'numpy_image.shape[0]\n',
        'white_pixels = np.sum(numpy_image == 255,0)\n',
        'white_pixels = np.sum(numpy_image == 255,1)\n',
        'white_pixels = np.sum(numpy_image == 255,2)\n',
        'white_pixels = np.all(np.sum(numpy_image == 255,2))\n',
        'np.sum(numpy_image == 255,2)\n',
        'numpy_image == 255\n',
        'white_pixels = np.sum(numpy_image == 255)\n',
        'numpy_image.shape\n',
        '1000 * 1000 * 3\n',
        'white_pixels = np.sum(numpy_image == 255,-1)\n',
        'white_pixels.shape\n',
        'np.sum(numpy_image == 255,-1) == 3\n',
        'white_pixels = np.sum(np.sum(numpy_image == 255,-1) == 3)\n',
        'white_pixels\n',
        'np.unique(img.reshape(-1, 3), axis=0, return_counts=True)\n',
        'np.unique(numpy_image.reshape(-1, 3), axis=0, return_counts=True)\n',
        'numpy_image.reshape(-1, 3)\n',
        'numpy_image.reshape(-1, 3) == [255,255,255]\n',
        'np.sum(numpy_image.reshape(-1, 3) == [255,255,255])\n',
        '(numpy_image.shape[0] * numpy_image.shape[1])\n',
        'img_reshaped = [255,255,255]\n',
        'img_reshaped = np.sum(img_reshaped == [255,255,255])/img_reshaped.s'\
        'hape[0]\n',
        'img_reshaped = numpy_image.reshape(-1, 3)\nimg_reshaped = np.sum(im'\
        'g_reshaped == [255,255,255])/img_reshaped.shape[0]\n\n',
        'img_reshaped\n',
        'd =  Image.open("/Users/ben/Downloads/04b1cf25-321f-4cb8-aba6-039c4'\
        'a8aa6dd.png")\n',
        'd\n',
        'numpy_image = np.array(d)\n',
        'numpy_image\n',
        'img_reshaped = numpy_image.reshape(-1, 3)\n',
        'is_white = np.sum(img_reshaped == [255,255,255])/img_reshaped.shape'\
        '[0]\n',
        'img_reshaped.shape[0]\n',
        'img_reshaped.shape\n',
        'np.sum(img_reshaped == [255,255,255],0)\n',
        'np.sum(img_reshaped == [255,255,255])\n',
        'img_reshaped.size\n',
        'is_white = np.sum(img_reshaped == [255,255,255])/img_reshaped.size'\
        '\n',
        'is_white\n',
        'is_black =np.sum(np.all(numpy_image == [255,255,255], axis=-1))/num'\
        'py_image.size\n',
        'is_black\n',
        'import os\n',
        'os.getcwd()\n',
        'import aggregate\n',
        'df = aggregate.load_classifications("data/species-classifications.c'\
        'sv",CURRENT_VERSION)\n',
        'df = aggregate.load_classifications("tests/data/species-classificat'\
        'ions.csv",CURRENT_VERSION)\n',
        'classifications_file = "tests/data/species-classifications.csv"\n',
        'import pandas as pd\n',
        'df.version\n',
        'df  = df[df.workflow_version == version]\n',
        'df.shape\n',
        'df.head()\n',
        'CURRENT_VERSION = 91.123\n',
        'version = CURRENT_VERSION\n',
        'df = pd.read_csv(classifications_file)\ndf  = df[df.workflow_versio'\
        'n == version]\n\n',
        'df.workflow_version\n',
        'df.workflow_version.unique()\n',
        'version\n',
        'df[df.workflow_version == version] \n',
        'df.workflow_version.iloc[2000]\n',
        'df.workflow_version == version\n',
        'df.workflow_version.iloc[200]\n',
        'min_version = 91.123\n',
        'df  = df[df.workflow_version > min_version]\n',
        'df = pd.read_csv(classifications_file)\n',
        'df\n',
        'df.workflow_version.iloc[300]\n']},
                       'launch-id': None,
                       'sel-line': 202L,
                       'sel-line-start': 8603L,
                       'selection_end': 8630L,
                       'selection_start': 8630L,
                       'zoom': 0L}),
                     ('bookmarks',
                      'wide',
                      1,
                      {}),
                     ('messages',
                      'wide',
                      2,
                      {}),
                     ('os-command',
                      'wide',
                      1,
                      {})],
        'primary_view_state': {'editor_states': ({'bookmarks': ([[loc('../../../miniconda3/envs/Zooniverse/lib/python3.7/site-packages/pandas/core/generic.py'),
        {'attrib-starts': [('NDFrame',
                            150),
                           ('NDFrame.__getattr__',
                            5256)],
         'first-line': 5247L,
         'folded-linenos': [],
         'sel-line': 5273L,
         'sel-line-start': 176248L,
         'selection_end': 176248L,
         'selection_start': 176248L,
         'zoom': 0L},
        1585864441.468239],
        [loc('aggregate.py'),
         {'attrib-starts': [('parse_annotations',
                             26)],
          'first-line': 10L,
          'folded-linenos': [],
          'sel-line': 32L,
          'sel-line-start': 822L,
          'selection_end': 902L,
          'selection_start': 822L,
          'zoom': 0L},
         1585864473.551574],
        [loc('../../../miniconda3/envs/Zooniverse/lib/python3.7/site-packages/pandas/core/ops/array_ops.py'),
         {'attrib-starts': [('comparison_op',
                             201)],
          'first-line': 201L,
          'folded-linenos': [],
          'sel-line': 233L,
          'sel-line-start': 6868L,
          'selection_end': 6868L,
          'selection_start': 6868L,
          'zoom': 0L},
         1585864475.660544],
        [loc('aggregate.py'),
         {'attrib-starts': [('parse_annotations',
                             26)],
          'first-line': 10L,
          'folded-linenos': [],
          'sel-line': 29L,
          'sel-line-start': 726L,
          'selection_end': 787L,
          'selection_start': 726L,
          'zoom': 0L},
         1585864522.279314],
        [loc('../../../miniconda3/envs/Zooniverse/lib/python3.7/site-packages/pandas/core/generic.py'),
         {'attrib-starts': [('NDFrame',
                             150),
                            ('NDFrame.__getattr__',
                             5256)],
          'first-line': 5241L,
          'folded-linenos': [],
          'sel-line': 5273L,
          'sel-line-start': 176248L,
          'selection_end': 176248L,
          'selection_start': 176248L,
          'zoom': 0L},
         1585864524.322211],
        [loc('aggregate.py'),
         {'attrib-starts': [('load_classifications',
                             8)],
          'first-line': 5L,
          'folded-linenos': [],
          'sel-line': 12L,
          'sel-line-start': 268L,
          'selection_end': 275L,
          'selection_start': 272L,
          'zoom': 0L},
         1585864603.831175],
        [loc('../../../miniconda3/envs/Zooniverse/lib/python3.7/site-packages/pandas/core/generic.py'),
         {'attrib-starts': [('NDFrame',
                             150),
                            ('NDFrame.__getattr__',
                             5256)],
          'first-line': 5253L,
          'folded-linenos': [],
          'sel-line': 5273L,
          'sel-line-start': 176248L,
          'selection_end': 176248L,
          'selection_start': 176248L,
          'zoom': 0L},
         1585864606.537574],
        [loc('aggregate.py'),
         {'attrib-starts': [('load_classifications',
                             8)],
          'first-line': 2L,
          'folded-linenos': [],
          'sel-line': 14L,
          'sel-line-start': 319L,
          'selection_end': 368L,
          'selection_start': 319L,
          'zoom': 0L},
         1585864622.323466],
        [loc('../../../miniconda3/envs/Zooniverse/lib/python3.7/site-packages/pandas/core/generic.py'),
         {'attrib-starts': [('NDFrame',
                             150),
                            ('NDFrame.__getattr__',
                             5256)],
          'first-line': 5253L,
          'folded-linenos': [],
          'sel-line': 5273L,
          'sel-line-start': 176248L,
          'selection_end': 176248L,
          'selection_start': 176248L,
          'zoom': 0L},
         1585864627.307705],
        [loc('../../../miniconda3/envs/Zooniverse/lib/python3.7/json/__init__.py'),
         {'attrib-starts': [('loads',
                             298)],
          'first-line': 308L,
          'folded-linenos': [],
          'sel-line': 340L,
          'sel-line-start': 13207L,
          'selection_end': 13207L,
          'selection_start': 13207L,
          'zoom': 0L},
         1585864633.886527],
        [loc('aggregate.py'),
         {'attrib-starts': [('extract_bbox',
                             17)],
          'first-line': 2L,
          'folded-linenos': [],
          'sel-line': 18L,
          'sel-line-start': 404L,
          'selection_end': 404L,
          'selection_start': 404L,
          'zoom': 0L},
         1585864637.862554],
        [loc('tests/test_aggregate.py'),
         {'attrib-starts': [('test_extract_bbox',
                             14)],
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 19L,
          'sel-line-start': 488L,
          'selection_end': 488L,
          'selection_start': 488L,
          'zoom': 0L},
         1585864648.076122],
        [loc('aggregate.py'),
         {'attrib-starts': [('parse_annotations',
                             27)],
          'first-line': 2L,
          'folded-linenos': [],
          'sel-line': 33L,
          'sel-line-start': 829L,
          'selection_end': 913L,
          'selection_start': 829L,
          'zoom': 0L},
         1585864652.663733],
        [loc('../../../miniconda3/envs/Zooniverse/lib/python3.7/site-packages/pandas/core/internals/blocks.py'),
         {'attrib-starts': [('Block',
                             90),
                            ('Block.apply',
                             384)],
          'first-line': 357L,
          'folded-linenos': [],
          'sel-line': 389L,
          'sel-line-start': 10829L,
          'selection_end': 10829L,
          'selection_start': 10829L,
          'zoom': 0L},
         1585864655.903932],
        [loc('aggregate.py'),
         {'attrib-starts': [('parse_annotations',
                             32)],
          'first-line': 26L,
          'folded-linenos': [],
          'sel-line': 44L,
          'sel-line-start': 1219L,
          'selection_end': 1240L,
          'selection_start': 1240L,
          'zoom': 0L},
         1585865032.149442],
        [loc('../../../miniconda3/envs/Zooniverse/lib/python3.7/site-packages/pandas/core/generic.py'),
         {'attrib-starts': [('NDFrame',
                             150),
                            ('NDFrame.__getattr__',
                             5256)],
          'first-line': 5255L,
          'folded-linenos': [],
          'sel-line': 5273L,
          'sel-line-start': 176248L,
          'selection_end': 176248L,
          'selection_start': 176248L,
          'zoom': 0L},
         1585865050.642688],
        [loc('aggregate.py'),
         {'attrib-starts': [('parse_annotations',
                             35)],
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 53L,
          'sel-line-start': 1664L,
          'selection_end': 1672L,
          'selection_start': 1672L,
          'zoom': 0L},
         1585865618.034502],
        [loc('tests/test_aggregate.py'),
         {'attrib-starts': [('test_extract_bbox',
                             14)],
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 16L,
          'sel-line-start': 419L,
          'selection_end': 448L,
          'selection_start': 448L,
          'zoom': 0L},
         1585870661.704093],
        [loc('aggregate.py'),
         {'attrib-starts': [('parse_subject_data',
                             32)],
          'first-line': 23L,
          'folded-linenos': [],
          'sel-line': 33L,
          'sel-line-start': 831L,
          'selection_end': 851L,
          'selection_start': 851L,
          'zoom': 0L},
         1585870683.725232],
        [loc('tests/test_aggregate.py'),
         {'attrib-starts': [('test_parse_file',
                             19)],
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 19L,
          'sel-line-start': 493L,
          'selection_end': 514L,
          'selection_start': 514L,
          'zoom': 0L},
         1585870702.505561]],
        20),
        'current-loc': loc('aggregate.py'),
        'editor-state-list': [(loc('aggregate.py'),
                               {'attrib-starts': [('parse_subject_data',
        32)],
                                'first-line': 29L,
                                'folded-linenos': [],
                                'sel-line': 34L,
                                'sel-line-start': 1080L,
                                'selection_end': 1080L,
                                'selection_start': 1080L,
                                'zoom': 0L}),
                              (loc('tests/test_aggregate.py'),
                               {'attrib-starts': [('test_parse_file',
        19)],
                                'first-line': 0L,
                                'folded-linenos': [],
                                'sel-line': 19L,
                                'sel-line-start': 493L,
                                'selection_end': 514L,
                                'selection_start': 514L,
                                'zoom': 0L}),
                              (loc('../../NEON_crown_maps/tests/test_sampling.py'),
                               {'attrib-starts': [],
                                'first-line': 0L,
                                'folded-linenos': [],
                                'sel-line': 2L,
                                'sel-line-start': 25L,
                                'selection_end': 132L,
                                'selection_start': 25L,
                                'zoom': 0L}),
                              (loc('../../../miniconda3/envs/Zooniverse/lib/python3.7/site-packages/pandas/core/generic.py'),
                               {'attrib-starts': [('NDFrame',
        150),
        ('NDFrame.__getattr__',
         5256)],
                                'first-line': 5255L,
                                'folded-linenos': [],
                                'sel-line': 5273L,
                                'sel-line-start': 176248L,
                                'selection_end': 176248L,
                                'selection_start': 176248L,
                                'zoom': 0L})],
        'has-focus': True,
        'locked': False},
        [loc('aggregate.py'),
         loc('tests/test_aggregate.py'),
         loc('../../NEON_crown_maps/tests/test_sampling.py'),
         loc('../../../miniconda3/envs/Zooniverse/lib/python3.7/site-packages/pandas/core/generic.py')]),
                               'open_files': [u'../../NEON_crown_maps/tests/test_sampling.py',
        u'tests/test_aggregate.py',
        u'aggregate.py']},
        'saved_notebook_display': None,
        'split_percents': {0: 0.23318938926588526},
        'splits': 2,
        'tab_location': 'top',
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {0: 0.5},
                 'splits': 2,
                 'tab_location': 'left',
                 'user_data': {}},
        'window-alloc': (1440,
                         0,
                         1920,
                         1080)}]}
guimgr.recent-documents = [loc('aggregate.py'),
                           loc('tests/test_aggregate.py'),
                           loc('../../../miniconda3/envs/Zooniverse/lib/python3.7/site-packages/pandas/core/generic.py'),
                           loc('../../NEON_crown_maps/tests/test_sampling.py')]
guimgr.visual-state = {loc('../../DeepForest_Model/GenerateAnchors.py'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 12L,
        'sel-line-start': 299L,
        'selection_end': 318L,
        'selection_start': 318L,
        'zoom': 0L},
                       loc('../../DeepForest_Model/generate.py'): {'attrib-s'\
        'tarts': [],
        'first-line': 225L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('cron.txt'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 5L,
        'sel-line-start': 281L,
        'selection_end': 304L,
        'selection_start': 304L,
        'zoom': 0L},
                       loc('upload.sh'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 1L,
        'sel-line-start': 31L,
        'selection_end': 157L,
        'selection_start': 31L,
        'zoom': 0L},
                       loc('../../NEON_crown_maps/main.py'): {'attrib-starts': [('g'\
        'enerate_tfrecord',
        69)],
        'first-line': 22L,
        'folded-linenos': [],
        'sel-line': 112L,
        'sel-line-start': 3934L,
        'selection_end': 3938L,
        'selection_start': 3938L,
        'zoom': 0L},
                       loc('../../NEON_crown_maps/predict.py'): {'attrib-sta'\
        'rts': [],
        'first-line': 102L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../../miniconda3/envs/Zooniverse/lib/python3.6/site-packages/_pytest/python.py'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L}}
proj.build-cmd = {None: ('default',
                         None)}
proj.env-vars = {None: ('default',
                        [u''])}
proj.pyexec = {None: ('custom',
                      u'/Users/ben/miniconda3/envs/Zooniverse/bin/python')}
proj.vcs-system-config = ('prefs',
                          {'bzr': {'versioncontrol.bzr.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.bzr.executable': u'bzr'},
                           'cvs': {'versioncontrol.cvs.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.cvs.executable': u'cvs',
                                   'versioncontrol.cvs.extra-global-args': '-'\
        'z3'},
                           'git': {'versioncontrol.git.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.git.executable': u'git',
                                   'versioncontrol.git.use-porcelain': True},
                           'hg': {'versioncontrol.hg.active': 'active-if-pro'\
        'ject-dir',
                                  'versioncontrol.hg.dont-find-unregistered': True,
                                  'versioncontrol.hg.executable': u'hg',
                                  'versioncontrol.hg.extra-global-args': '--'\
        'encoding=utf8'},
                           'perforce': {'versioncontrol.perforce.active': 'n'\
        'ot-active',
        'versioncontrol.perforce.dont-find-unregistered': True,
        'versioncontrol.perforce.executable': u'p4',
        'versioncontrol.perforce.extra-global-args': ''},
                           'svn': {'versioncontrol.svn.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.svn.executable': u'svn',
                                   'versioncontrol.svn.extra-global-args': '',
                                   'versioncontrol.svn.svnadmin-executable': u'svnadmin'}})
search.search-history = [u'bounds',
                         u'blank',
                         u'white',
                         u'print',
                         u'black',
                         u'args',
                         u'save_dir',
                         u'png',
                         u'mkdir',
                         u'connec',
                         u'connected',
                         u'tile_raster']
testing.run-as-package-module = {None: False}
testing.stored-results = (1,
                          [(u'/Users/ben/Documents/EvergladesWadingBird/Zooniverse/tests/test_tile_raster.py',
                            [('test_run',
                              1,
                              None,
                              None,
                              ('',
                               "<ExceptionInfo AssertionError(\"assert False"\
                               "\\n +  where False = <function exists at 0x1"\
                               "085a2440>('output/SOAP_046_1.png')\\n +    w"\
                               "here...sts\\n +      where <module 'posixpat"\
                               "h' from '/Users/ben/miniconda3/envs/crowns/l"\
                               "ib/python3.7/posixpath.py'> = os.path\") tbl"\
                               "en=1>",
                               "AssertionError: assert False\n +  where Fals"\
                               "e = <function exists at 0x1085a2440>('output"\
                               "/SOAP_046_1.png')\n +    where <function exi"\
                               "sts at 0x1085a2440> = <module 'posixpath' fr"\
                               "om '/Users/ben/miniconda3/envs/crowns/lib/py"\
                               "thon3.7/posixpath.py'>.exists\n +      where"\
                               " <module 'posixpath' from '/Users/ben/minico"\
                               "nda3/envs/crowns/lib/python3.7/posixpath.py'"\
                               "> = os.path",
                               [(u'/Users/ben/Documents/EvergladesWadingBird/Zooniverse/tests/test_tile_raster.py',
                                 '/Users/ben/Documents/EvergladesWadingBird/'\
                                 'Zooniverse/tests/test_tile_raster.py',
                                 7,
                                 'test_run',
                                 None,
                                 '    assert os.path.exists("output/SOAP_046'\
                                 '_1.png")')],
                               0,
                               None,
                               None,
                               None,
                               None),
                              1584555830,
                              4)]),
                           (u'/Users/ben/Documents/EvergladesWadingBird/Zooniverse/tests/test_aggregate.py',
                            [('test_load_classifications',
                              1,
                              None,
                              None,
                              ('',
                               "<ExceptionInfo AttributeError(\"'DataFrame' "\
                               "object has no attribute 'workflow_version'\""\
                               ") tblen=3>",
                               "AttributeError: 'DataFrame' object has no at"\
                               "tribute 'workflow_version'",
                               [(u'/Users/ben/Documents/EvergladesWadingBird/Zooniverse/tests/test_aggregate.py',
                                 '/Users/ben/Documents/EvergladesWadingBird/'\
                                 'Zooniverse/tests/test_aggregate.py',
                                 11,
                                 'test_load_classifications',
                                 None,
                                 '    df = aggregate.load_classifications("d'\
                                 'ata/species-classifications.csv",min_versi'\
                                 'on)'),
                                (u'/Users/ben/Documents/EvergladesWadingBird/Zooniverse/aggregate.py',
                                 '/Users/ben/Documents/EvergladesWadingBird/'\
                                 'Zooniverse/aggregate.py',
                                 14,
                                 'load_classifications',
                                 None,
                                 '    df  = df[df.workflow_version > version'\
                                 ']'),
                                (u'/Users/ben/miniconda3/envs/Zooniverse/lib/python3.7/site-packages/pandas/core/generic.py',
                                 '/Users/ben/miniconda3/envs/Zooniverse/lib/'\
                                 'python3.7/site-packages/pandas/core/generi'\
                                 'c.py',
                                 5273,
                                 '__getattr__',
                                 None,
                                 '            return object.__getattribute__'\
                                 '(self, name)')],
                               0,
                               None,
                               None,
                               None,
                               None),
                              1585864564,
                              10),
                             ('test_extract_bbox',
                              1,
                              None,
                              None,
                              ('',
                               "<ExceptionInfo AttributeError(\"'DataFrame' "\
                               "object has no attribute 'workflow_version'\""\
                               ") tblen=3>",
                               "AttributeError: 'DataFrame' object has no at"\
                               "tribute 'workflow_version'",
                               [(u'/Users/ben/Documents/EvergladesWadingBird/Zooniverse/tests/test_aggregate.py',
                                 '/Users/ben/Documents/EvergladesWadingBird/'\
                                 'Zooniverse/tests/test_aggregate.py',
                                 15,
                                 'test_extract_bbox',
                                 None,
                                 '    df = aggregate.load_classifications("d'\
                                 'ata/species-classifications.csv",min_versi'\
                                 'on)'),
                                (u'/Users/ben/Documents/EvergladesWadingBird/Zooniverse/aggregate.py',
                                 '/Users/ben/Documents/EvergladesWadingBird/'\
                                 'Zooniverse/aggregate.py',
                                 14,
                                 'load_classifications',
                                 None,
                                 '    df  = df[df.workflow_version > version'\
                                 ']'),
                                (u'/Users/ben/miniconda3/envs/Zooniverse/lib/python3.7/site-packages/pandas/core/generic.py',
                                 '/Users/ben/miniconda3/envs/Zooniverse/lib/'\
                                 'python3.7/site-packages/pandas/core/generi'\
                                 'c.py',
                                 5273,
                                 '__getattr__',
                                 None,
                                 '            return object.__getattribute__'\
                                 '(self, name)')],
                               0,
                               None,
                               None,
                               None,
                               None),
                              1585864564,
                              14)])],
                          {})
