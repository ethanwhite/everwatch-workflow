#!wing
#!version=7.0
##################################################################
# Wing project file : User-specific branch                       #
##################################################################
[user attributes]
debug.breakpoints = {loc('../../DeepTreeAttention/experiments/Trees/prepare_field_data.py'): {71L: (0,
        None,
        1,
        0)},
                     loc('create_model.py'): {108L: (0,
        None,
        1,
        0)},
                     loc('tests/test_create_model.py'): {76L: (0,
        None,
        1,
        0),
        82L: (0,
              None,
              1,
              0)},
                     loc('tests/test_nest_aggregate.py'): {32L: (0,
        None,
        1,
        0)}}
debug.exceptions-ignored = {loc('../../../miniconda3/envs/Zooniverse/lib/python3.7/site-packages/_pytest/_code/code.py'): {213: True},
                            loc('../../../miniconda3/envs/Zooniverse/lib/python3.7/site-packages/_pytest/config/__init__.py'): {1179: True},
                            loc('../../../miniconda3/envs/Zooniverse/lib/python3.7/site-packages/_pytest/python.py'): {515: True},
                            loc('../../../opt/miniconda3/envs/Zooniverse/lib/python3.7/site-packages/_pytest/config/__init__.py'): {1511: True}}
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'cNyyWhTuba9As824nEqL4DMa8p'\
        'ddQX4l',
        'size-state': 'maximized',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [0,
                                   0],
                 'full-screen': False,
                 'notebook_display': 'tabs only',
                 'notebook_percent': 0.009071877180739651,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'expanded-nodes': [],
                                 'selected-nodes': [],
                                 'top-node': (0,)}},
        'tree-style': 'deep'}}),
                              ('browser',
                               'tall',
                               0,
                               {}),
                              ('snippets',
                               'tall',
                               0,
                               {}),
                              ('source-assistant',
                               'tall',
                               2,
                               {}),
                              ('debug-stack',
                               'tall',
                               1,
                               {}),
                              ('indent',
                               'tall',
                               2,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [5,
                          1],
        'notebook_display': 'normal',
        'notebook_percent': 0.5,
        'override_title': None,
        'pagelist': [('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': u'',
                                       'fReverse': False,
                                       'fSearchText': u'version',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': u'test',
                                       'fReverse': False,
                                       'fSearchText': u'debug',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False}}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('debug-exceptions',
                      'wide',
                      0,
                      {}),
                     ('debug-breakpoints',
                      'wide',
                      0,
                      {'tree-state': []}),
                     ('testing',
                      'wide',
                      0,
                      {'added-files': [loc('tests/test_extract.py'),
                                       loc('tests/test_aggregate.py')],
                       'filter': u'',
                       'recent-filters': None,
                       'sort-order': 'source-lineno',
                       'tree-state': {'expanded-nodes': [(0,),
        (1,),
        (1,
         4),
        (2,)],
                                      'selected-nodes': [(1,
        4)],
                                      'top-node': (0,
        8)}}),
                     ('debug-io',
                      'wide',
                      1,
                      {}),
                     ('debug-probe',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'code-line': '',
                       'first-line': 1710L,
                       'folded-linenos': [],
                       'history': {u'file:/Applications/WingPro.app/Contents/Resources/src/testing/runners/run_pytest_xml.py': ['n'\
        'eighbor_features = tf.keras.layers.Conv1D(classes, kernel_size=(2))'\
        '(neighbor_inputs)\n',
        'neighbor_features = tf.keras.layers.Conv1D(classes, kernel_size=(5)'\
        ')(neighbor_inputs)\n',
        'neighbor_features = tf.keras.layers.Conv1D(classes, kernel_size=(k_'\
        'neighbors))(neighbor_inputs)\n',
        'neighbor_features\n',
        'context_vector = tf.keras.backend.squeeze(context_vector,1)\n',
        'context_vector\n',
        'scaled_context = tf.keras.backend.squeeze(context_vector,1)\n',
        'scaled_context = tf.keras.backend.squeeze(attention_features,1)\n',
        'context_residual = WeightedSum(name="ensemble_add_bias")([scaled_co'\
        'ntext,original_features])\n',
        'context_residual = tf.keras.layers.Dense(classes)(context_residual)'\
        '\n',
        'context_residual\n',
        'attention_features\n',
        'scaled_context = tf.keras.layers.GlobalAveragePooling1D()(attention'\
        '_features)\n',
        'scaled_context\n',
        'joined_df.shape[0]\n',
        'df.shape[0]\n',
        'joined_df.head(n=5)\n',
        'joined_df.iloc[0]\n',
        'joined_df.iloc[1]\n',
        'image_df.shape\n',
        'image_df = pd.read_csv(image_data)\n',
        'image_data\n',
        'df.workflow_name\n',
        'min_version\n',
        'df = pd.read_csv(classifications_file)\n',
        'df.workflow_name.u\n',
        'df.workflow_name.unique()\n',
        'os.getcwd()\n',
        'annotations\n',
        'gp\n',
        'a=gp.read_file("output/everglades-watch-classifications.shp")\n',
        'selected_annotations.shape\n',
        'len(gdf.subject_ids)\n',
        'len(gdf.subject_ids.unique())\n',
        'group["selected_index"]\n',
        'group.index.values\n',
        'group["selected_index"] = group.index.values\n',
        'group.shape\n',
        'selected_annotations = spatial_join(gdf)\n',
        'selected_annotations\n',
        'selected_annotations.columns\n',
        'spatial_index = gdf.sindex\n',
        'gdf["bbox"] = [box(left, bottom, right, top) for left, bottom, righ'\
        't, top in gdf.geometry.buffer(1).bounds.values]\n',
        '#for each overlapping image\n  for name, group in gdf.groupby("subj'\
        'ect_ids"):\n      if len(group.classification_id.unique()) == 1:\n'\
        '          group["selected_index"] = group.index.values\n      else:'\
        '\n          for index, row in group.iterrows():\n              geom'\
        ' = row["bbox"]\n              #Spatial clip to window using spatial'\
        ' index for faster querying\n              possible_matches_index = '\
        'list(spatial_index.intersection(geom.bounds))\n              possib'\
        'le_matches = gdf.iloc[possible_matches_index]\n              \n    '\
        '          #If just matches itself, skip indexing\n              if '\
        'len(possible_matches) == 1:\n                  gdf.loc[index, "sele'\
        'cted_index"] = index\n              else:\n                  boxes_'\
        'to_merge = { }\n                  labels = []\n                  \n'\
        '                  #Add target box to consider\n                  bo'\
        'xes_to_merge[index] = geom\n                  labels.append(row["sp'\
        'ecies"])\n                  \n                  #Find intersection '\
        'over union\n                  for match_index, match_row in possibl'\
        'e_matches.iterrows():\n                      match_geom = match_row'\
        '["bbox"]\n                      IoU = calculate_IoU(geom, match_geo'\
        'm)\n                      \n                      if IoU > IoU_thre'\
        'shold:\n                          boxes_to_merge[match_index] = mat'\
        'ch_geom\n                          labels.append(match_row["species'\
        '"])\n                  \n                  #Choose final box and la'\
        'bels\n                  selected_key = choose_box(boxes_to_merge)\n'\
        '                  gdf.loc[index, "selected_index"] = selected_key\n'\
        '\n\n',
        '#Turn buffered points into boxes\ngdf["bbox"] = [box(left, bottom, '\
        'right, top) for left, bottom, right, top in gdf.geometry.buffer(1).'\
        'bounds.values]\n\n#for each overlapping image\nfor name, group in g'\
        'df.groupby("subject_ids"):\n    if len(group.classification_id.uniq'\
        'ue()) == 1:\n        group["selected_index"] = group.index.values\n'\
        '    else:\n        for index, row in group.iterrows():\n           '\
        ' geom = row["bbox"]\n            #Spatial clip to window using spat'\
        'ial index for faster querying\n            possible_matches_index ='\
        ' list(spatial_index.intersection(geom.bounds))\n            possibl'\
        'e_matches = gdf.iloc[possible_matches_index]\n            \n       '\
        '     #If just matches itself, skip indexing\n            if len(pos'\
        'sible_matches) == 1:\n                gdf.loc[index, "selected_inde'\
        'x"] = index\n            else:\n                boxes_to_merge = { '\
        '}\n                labels = []\n                \n                #'\
        'Add target box to consider\n                boxes_to_merge[index] ='\
        ' geom\n                labels.append(row["species"])\n             '\
        '   \n                #Find intersection over union\n               '\
        ' for match_index, match_row in possible_matches.iterrows():\n      '\
        '              match_geom = match_row["bbox"]\n                    I'\
        'oU = calculate_IoU(geom, match_geom)\n                    \n       '\
        '             if IoU > IoU_threshold:\n                        boxes'\
        '_to_merge[match_index] = match_geom\n                        labels'\
        '.append(match_row["species"])\n                \n                #C'\
        'hoose final box and labels\n                selected_key = choose_b'\
        'ox(boxes_to_merge)\n                gdf.loc[index, "selected_index"'\
        '] = selected_key\n\n\n',
        'gdf.columnsgdf.groupby("subject_ids")\n',
        'gdf.groupby("subject_ids")\n',
        'a=gdf.groupby("subject_ids")\n',
        'for x in a: print(x)\n',
        ' group["selected_index"] = group.index.values\n',
        'gdf\n',
        'gdf.loc[group.index.values,"selected_index"] = group.index.values\n',
        'len(group.classification_id.unique())\n',
        'annotations.columns\n',
        'df.head(n=5)\n',
        "#Read in image location data\n   image_df = pd.read_csv(image_data)"\
        "\n   image_df = image_df[[\"subject_id\",\"locations\"]]\n   \n   #"\
        "drop duplicates\n   image_df = image_df.drop_duplicates()\n   \n   "\
        "joined_df = df.merge(image_df,on=\"subject_id\")\n   \n   #assert s"\
        "ingle matches\n   assert joined_df.shape[0] == df.shape[0]\n   \n  "\
        " #buffer the points by 1m\n   joined_df[\"url\"] = joined_df.locati"\
        "ons.apply(lambda x: json.loads(x)['0'])\n   grouped_df = joined_df."\
        "groupby(\"url\")\n   \n   #Split into image groups and download the"\
        " image and write a shapefile\n   group_data = [grouped_df.get_group"\
        "(x) for x in grouped_df.groups]\n\n",
        "#Read in image location data\nimage_df = pd.read_csv(image_data)\n"\
        "image_df = image_df[[\"subject_id\",\"locations\"]]\n\n#drop duplic"\
        "ates\nimage_df = image_df.drop_duplicates()\n\njoined_df = df.merge"\
        "(image_df,on=\"subject_id\")\n\n#assert single matches\nassert join"\
        "ed_df.shape[0] == df.shape[0]\n\n#buffer the points by 1m\njoined_d"\
        "f[\"url\"] = joined_df.locations.apply(lambda x: json.loads(x)['0']"\
        ")\ngrouped_df = joined_df.groupby(\"url\")\n\n#Split into image gro"\
        "ups and download the image and write a shapefile\ngroup_data = [gro"\
        "uped_df.get_group(x) for x in grouped_df.groups]\n\n",
        'image_df\n',
        'df.subject_id = df.subject_id.astype("int")\n',
        'df.subject_id\n',
        'joined_df = df.merge(image_df,on="subject_id")\n',
        '#assert single matches\n assert joined_df.shape[0] == df.shape[0]\n'\
        '\n',
        'assert joined_df.shape[0] == df.shape[0]\n',
        "#buffer the points by 1m\njoined_df[\"url\"] = joined_df.locations."\
        "apply(lambda x: json.loads(x)['0'])\ngrouped_df = joined_df.groupby"\
        "(\"url\")\n\n#Split into image groups and download the image and wr"\
        "ite a shapefile\ngroup_data = [grouped_df.get_group(x) for x in gro"\
        "uped_df.groups]\n\n",
        'df = gp.read_file(classification_shp)\n',
        'df = df[["subject_id","x","y","species","behavior","geometry","sele'\
        'cted_i"]]\n',
        'shapefile\n',
        'joined_df = df.merge(image_df,on="subject_id")',
        'a = gp.read_file("/Users/benweinstein/Documents/EvergladesWadingBir'\
        'd/Zooniverse/tests/output/images/52928560.shp")\n',
        'a\n',
        'a.columns\n',
        "df = df[[\"subject_id\",\"x\",\"y\",\"species\",\"behavior\",\"geom"\
        "etry\",\"selected_i\"]]\ndf.subject_id = df.subject_id.astype(int)"\
        "\n\n#Read in image location data\nimage_df = pd.read_csv(image_data"\
        ")\nimage_df = image_df[[\"subject_id\",\"locations\"]]\n\n#drop dup"\
        "licates\nimage_df = image_df.drop_duplicates()\ndf.subject_id = df."\
        "subject_id.astype(\"int\")\njoined_df = df.merge(image_df,on=\"subj"\
        "ect_id\")\n\n#assert single matches\nassert joined_df.shape[0] == d"\
        "f.shape[0]\n\n#buffer the points by 1m\njoined_df[\"url\"] = joined"\
        "_df.locations.apply(lambda x: json.loads(x)['0'])\ngrouped_df = joi"\
        "ned_df.groupby(\"url\")\n\n",
        'grouped_df\n',
        'group_data[0]\n',
        'group_data[0].columns\n',
        'savedir\n',
        'basename = "{}".format(group.subject_id.unique()[0])\n',
        'joined_df\n',
        'joined_df.columns\n',
        'grouped_df = joined_df.groupby("url")\n',
        'group[0].columns\n',
        'group_data = [grouped_df.get_group(x) for x in grouped_df.groups]\n',
        'group_data\n',
        'group_data    for group in group_data:\n        \n        #Format f'\
        'or download\n        download_url = group.url.unique()[0]\n        '\
        '\n        #Download image\n        basename = "{}".format(group.sub'\
        'ject_id.unique()[0])\n        name = "{}.png".format(os.path.join(s'\
        'avedir,basename))\n        download_from_zooniverse(name=name, url='\
        'download_url)\n        group["geometry"] = [box(left, bottom, right'\
        ', top) for left, bottom, right, top in group.geometry.buffer(1).bou'\
        'nds.values]\n        \n        #Create a shapefile\n        shpname'\
        ' = "{}.shp".format(os.path.join(savedir,basename))\n        group.t'\
        'o_file(shpname)\n\n',
        'for group in group_data:\n    \n    #Format for download\n    downl'\
        'oad_url = group.url.unique()[0]\n    \n    #Download image\n    bas'\
        'ename = "{}".format(group.subject_id.unique()[0])\n    name = "{}.p'\
        'ng".format(os.path.join(savedir,basename))\n    download_from_zooni'\
        'verse(name=name, url=download_url)\n    group["geometry"] = [box(le'\
        'ft, bottom, right, top) for left, bottom, right, top in group.geome'\
        'try.buffer(1).bounds.values]\n    \n    #Create a shapefile\n    sh'\
        'pname = "{}.shp".format(os.path.join(savedir,basename))\n    group.'\
        'to_file(shpname)\n\n',
        'download_from_zooniverse(name=name, url=download_url)\n',
        'group\n',
        'rgb_path\n',
        'group.columns\n',
        'df.c\n',
        'gdf = gp.read_file(shapefile)\n',
        'gdf.columns\n',
        'gdf["geometry"] =[Point(x,y) for x,y in zip(gdf.x.astype(float), gd'\
        'f.y.astype(float))]\ngdf["geometry"] = [box(int(left), int(bottom),'\
        ' int(right), int(top)) for left, bottom, right, top in gdf.geometry'\
        '.buffer(25).bounds.values]\n    \n#extent bounds\ndf = gdf.bounds\n'\
        '\n#Assert size mantained\nassert df.shape[0] == gdf.shape[0]\n\ndf '\
        '= df.rename(columns={"minx":"xmin","miny":"ymin","maxx":"xmax","max'\
        'y":"ymax"})\n\n',
        'df.columns\n',
        'gdf.shape\n',
        'df.shape\n',
        'df["selected_i"] = gdf.selected_i\n',
        'df\n',
        'test\n',
        'train\n']},
                       'launch-id': None,
                       'sel-line': 1730L,
                       'sel-line-start': 106289L,
                       'selection_end': 106289L,
                       'selection_start': 106289L,
                       'zoom': 0L}),
                     ('debug-watch',
                      'wide',
                      1,
                      {'node-states': [],
                       'tree-state': {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': (0,)}}),
                     ('debug-modules',
                      'wide',
                      1,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'code-line': '',
                       'first-line': 4L,
                       'folded-linenos': [],
                       'history': {None: ['import geopandas as gpd\n',
        'a = gpd.read_file("/Users/benweinstein/Documents/EvergladesWadingBi'\
        'rd/Zooniverse/tests/output/everglades-watch-classifications.shp")\n',
        'a\n',
        'a.columns\n']},
                       'launch-id': None,
                       'sel-line': 26L,
                       'sel-line-start': 1438L,
                       'selection_end': 1438L,
                       'selection_start': 1438L,
                       'zoom': 0L}),
                     ('bookmarks',
                      'wide',
                      1,
                      {}),
                     ('messages',
                      'wide',
                      2,
                      {'current-domain': 0}),
                     ('os-command',
                      'wide',
                      1,
                      {})],
        'primary_view_state': {'editor_states': ({'bookmarks': ([[loc('tests/test_extract.py'),
        {'attrib-starts': [('test_run|0|',
                            12)],
         'code-line': '    extract.run(image_data="data/everglades-watch-sub'\
                      'jects.csv",  classification_shp="output/everglades-wa'\
                      'tch-classifications.shp",savedir=tmpdir)\n',
         'first-line': 0L,
         'folded-linenos': [],
         'sel-line': 16L,
         'sel-line-start': 534L,
         'selection_end': 679L,
         'selection_start': 673L,
         'zoom': 0L},
        1612037196.38834],
        [loc('tests/test_extract.py'),
         {'attrib-starts': [],
          'code-line': '#test extract bounding classification for DeepForest'\
                       '\n',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 0L,
          'sel-line-start': 0L,
          'selection_end': 52L,
          'selection_start': 0L,
          'zoom': 0L},
         1612037198.932536],
        [loc('extract.py'),
         {'attrib-starts': [('run|0|',
                             74)],
          'code-line': '        download_from_zooniverse(name=name, url=down'\
                       'load_url)\n',
          'first-line': 103L,
          'folded-linenos': [],
          'sel-line': 111L,
          'sel-line-start': 3766L,
          'selection_end': 3766L,
          'selection_start': 3766L,
          'zoom': 0L},
         1612037316.757844],
        [loc('create_model.py'),
         {'attrib-starts': [('shapefile_to_annotations|0|',
                             13)],
          'code-line': '    result = df[["image_path","xmin","ymin","xmax","'\
                       'ymax","label","selected_i"]]\n',
          'first-line': 45L,
          'folded-linenos': [],
          'sel-line': 63L,
          'sel-line-start': 2034L,
          'selection_end': 2034L,
          'selection_start': 2034L,
          'zoom': 0L},
         1612037335.673024],
        [loc('../../../opt/miniconda3/envs/Zooniverse/lib/python3.7/site-packages/pandas/core/generic.py'),
         {'attrib-starts': [('NDFrame|0|',
                             155),
                            ('NDFrame|0|.__getattr__|0|',
                             5122)],
          'code-line': '            return object.__getattribute__(self, nam'\
                       'e)\n',
          'first-line': 5127L,
          'folded-linenos': [],
          'sel-line': 5138L,
          'sel-line-start': 174343L,
          'selection_end': 174343L,
          'selection_start': 174343L,
          'zoom': 0L},
         1612037355.508012],
        [loc('tests/test_create_model.py'),
         {'attrib-starts': [('test_format_shapefiles|0|',
                             61)],
          'code-line': '    results = create_model.format_shapefiles(shp_dir'\
                       '=tmpdir)\n',
          'first-line': 49L,
          'folded-linenos': [],
          'sel-line': 62L,
          'sel-line-start': 2238L,
          'selection_end': 2297L,
          'selection_start': 2297L,
          'zoom': 0L},
         1612037355.516028],
        [loc('tests/test_create_model.py'),
         {'attrib-starts': [('test_format_shapefiles|0|',
                             61)],
          'code-line': 'def test_format_shapefiles(extract_images, tmpdir):'\
                       '\n',
          'first-line': 49L,
          'folded-linenos': [],
          'sel-line': 61L,
          'sel-line-start': 2186L,
          'selection_end': 2237L,
          'selection_start': 2186L,
          'zoom': 0L},
         1612037356.782824],
        [loc('create_model.py'),
         {'attrib-starts': [('shapefile_to_annotations|0|',
                             13)],
          'code-line': '    result = df[["image_path","xmin","ymin","xmax","'\
                       'ymax","label","selected_i"]]\n',
          'first-line': 45L,
          'folded-linenos': [],
          'sel-line': 63L,
          'sel-line-start': 2034L,
          'selection_end': 2034L,
          'selection_start': 2034L,
          'zoom': 0L},
         1612037356.78649],
        [loc('create_model.py'),
         {'attrib-starts': [('split_test_train|0|',
                             101)],
          'code-line': 'def split_test_train(annotations):\n',
          'first-line': 85L,
          'folded-linenos': [],
          'sel-line': 101L,
          'sel-line-start': 3277L,
          'selection_end': 3309L,
          'selection_start': 3298L,
          'zoom': 0L},
         1612037587.523998],
        [loc('tests/test_create_model.py'),
         {'attrib-starts': [('test_format_shapefiles|0|',
                             61)],
          'code-line': 'def test_format_shapefiles(extract_images, tmpdir):'\
                       '\n',
          'first-line': 49L,
          'folded-linenos': [],
          'sel-line': 61L,
          'sel-line-start': 2186L,
          'selection_end': 2237L,
          'selection_start': 2186L,
          'zoom': 0L},
         1612037587.53422],
        [loc('tests/test_create_model.py'),
         {'attrib-starts': [('annotations|0|',
                             22)],
          'code-line': '    annotations = create_model.format_shapefiles(shp'\
                       '_dir=tmpdir)    \n',
          'first-line': 3L,
          'folded-linenos': [],
          'sel-line': 23L,
          'sel-line-start': 672L,
          'selection_end': 702L,
          'selection_start': 690L,
          'zoom': 0L},
         1612037609.870109],
        [loc('create_model.py'),
         {'attrib-starts': [('split_test_train|0|',
                             101)],
          'code-line': '    \n',
          'first-line': 93L,
          'folded-linenos': [],
          'sel-line': 108L,
          'sel-line-start': 3567L,
          'selection_end': 3571L,
          'selection_start': 3571L,
          'zoom': 0L},
         1612037627.194965],
        [loc('create_model.py'),
         {'attrib-starts': [('shapefile_to_annotations|0|',
                             13)],
          'code-line': '    result = df[["image_path","xmin","ymin","xmax","'\
                       'ymax","label"]]\n',
          'first-line': 46L,
          'folded-linenos': [],
          'sel-line': 63L,
          'sel-line-start': 2034L,
          'selection_end': 2099L,
          'selection_start': 2099L,
          'zoom': 0L},
         1612037638.608411],
        [loc('tests/test_create_model.py'),
         {'attrib-starts': [('annotations|0|',
                             22)],
          'code-line': '    annotations = create_model.format_shapefiles(shp'\
                       '_dir=tmpdir)    \n',
          'first-line': 3L,
          'folded-linenos': [],
          'sel-line': 23L,
          'sel-line-start': 672L,
          'selection_end': 702L,
          'selection_start': 690L,
          'zoom': 0L},
         1612037638.617889],
        [loc('tests/test_create_model.py'),
         {'attrib-starts': [('test_shapefile_to_annotations|0|',
                             26)],
          'code-line': '    assert all(df.columns == ["image_path","xmin","y'\
                       'min","xmax","ymax","label"])\n',
          'first-line': 14L,
          'folded-linenos': [],
          'sel-line': 30L,
          'sel-line-start': 1046L,
          'selection_end': 1124L,
          'selection_start': 1124L,
          'zoom': 0L},
         1612037694.358185],
        [loc('tests/test_create_model.py'),
         {'attrib-starts': [('test_split_test_train|0|',
                             70)],
          'code-line': 'def test_split_test_train(extract_images, annotation'\
                       's):\n',
          'first-line': 58L,
          'folded-linenos': [],
          'sel-line': 70L,
          'sel-line-start': 2571L,
          'selection_end': 2626L,
          'selection_start': 2571L,
          'zoom': 0L},
         1612041017.632197],
        [loc('tests/test_create_model.py'),
         {'attrib-starts': [('test_split_test_train|0|',
                             70)],
          'code-line': '    assert not test.empty\n',
          'first-line': 63L,
          'folded-linenos': [],
          'sel-line': 75L,
          'sel-line-start': 2759L,
          'selection_end': 2784L,
          'selection_start': 2759L,
          'zoom': 0L},
         1612041021.050384],
        [loc('tests/test_create_model.py'),
         {'attrib-starts': [('test_split_test_train|0|',
                             70)],
          'code-line': 'def test_split_test_train(extract_images, annotation'\
                       's):\n',
          'first-line': 74L,
          'folded-linenos': [],
          'sel-line': 70L,
          'sel-line-start': 2571L,
          'selection_end': 2626L,
          'selection_start': 2571L,
          'zoom': 0L},
         1612041032.942174],
        [loc('tests/test_create_model.py'),
         {'attrib-starts': [('test_split_test_train|0|',
                             70)],
          'code-line': '    assert not test.empty\n',
          'first-line': 62L,
          'folded-linenos': [],
          'sel-line': 75L,
          'sel-line-start': 2759L,
          'selection_end': 2759L,
          'selection_start': 2759L,
          'zoom': 0L},
         1612041079.212157],
        [loc('aggregate.py'),
         {'attrib-starts': [('run|0|',
                             288)],
          'code-line': 'def run(classifications_file=None, savedir=".", down'\
                       'load=False, generate=False,min_version=272.359, debu'\
                       'g=False):\n',
          'first-line': 277L,
          'folded-linenos': [],
          'sel-line': 288L,
          'sel-line-start': 10897L,
          'selection_end': 11002L,
          'selection_start': 10997L,
          'zoom': 0L},
         1612041081.782032]],
        20),
        'current-loc': loc('aggregate.py'),
        'editor-state-list': [(loc('aggregate.py'),
                               {'attrib-starts': [('run|0|',
        288)],
                                'code-line': '        df = df.sample(n=20)  '\
        '      \n',
                                'first-line': 284L,
                                'folded-linenos': [],
                                'sel-line': 304L,
                                'sel-line-start': 11496L,
                                'selection_end': 11522L,
                                'selection_start': 11522L,
                                'zoom': 0L}),
                              (loc('../../../opt/miniconda3/envs/Zooniverse/lib/python3.7/site-packages/pandas/core/indexes/base.py'),
                               {'attrib-starts': [('Index|0|',
        193),
        ('Index|0|.get_loc|0|',
         2850)],
                                'code-line': '                raise KeyError'\
        '(key) from err\n',
                                'first-line': 2878L,
                                'folded-linenos': [],
                                'sel-line': 2896L,
                                'sel-line-start': 91609L,
                                'selection_end': 91609L,
                                'selection_start': 91609L,
                                'zoom': 0L}),
                              (loc('create_model.py'),
                               {'attrib-starts': [('shapefile_to_annotations'\
        '|0|',
        13)],
                                'code-line': '    result = df[["image_path",'\
        '"xmin","ymin","xmax","ymax","label"]]\n',
                                'first-line': 46L,
                                'folded-linenos': [],
                                'sel-line': 63L,
                                'sel-line-start': 2034L,
                                'selection_end': 2099L,
                                'selection_start': 2099L,
                                'zoom': 0L}),
                              (loc('extract.py'),
                               {'attrib-starts': [('run|0|',
        74)],
                                'code-line': '        download_from_zooniver'\
        'se(name=name, url=download_url)\n',
                                'first-line': 103L,
                                'folded-linenos': [],
                                'sel-line': 111L,
                                'sel-line-start': 3766L,
                                'selection_end': 3766L,
                                'selection_start': 3766L,
                                'zoom': 0L}),
                              (loc('../../../opt/miniconda3/envs/Zooniverse/lib/python3.7/site-packages/_pytest/fixtures.py'),
                               {'attrib-starts': [('FixtureRequest|0|',
        421),
        ('FixtureRequest|0|._getnextfixturedef|0|',
         455)],
                                'code-line': '            raise FixtureLooku'\
        'pError(argname, self)\n',
                                'first-line': 458L,
                                'folded-linenos': [],
                                'sel-line': 470L,
                                'sel-line-start': 18306L,
                                'selection_end': 18357L,
                                'selection_start': 18306L,
                                'zoom': 0L}),
                              (loc('../../../opt/miniconda3/envs/Zooniverse/lib/python3.7/site-packages/pandas/core/generic.py'),
                               {'attrib-starts': [('NDFrame|0|',
        155),
        ('NDFrame|0|.__getattr__|0|',
         5122)],
                                'code-line': '            return object.__ge'\
        'tattribute__(self, name)\n',
                                'first-line': 5127L,
                                'folded-linenos': [],
                                'sel-line': 5138L,
                                'sel-line-start': 174343L,
                                'selection_end': 174343L,
                                'selection_start': 174343L,
                                'zoom': 0L}),
                              (loc('../../../opt/miniconda3/envs/Zooniverse/lib/python3.7/site-packages/pandas/core/reshape/merge.py'),
                               {'attrib-starts': [('_MergeOperation|0|',
        567),
        ('_MergeOperation|0|._maybe_coerce_merge_keys|0|',
         1066)],
                                'code-line': '                    raise Valu'\
        'eError(msg)\n',
                                'first-line': 1156L,
                                'folded-linenos': [],
                                'sel-line': 1164L,
                                'sel-line-start': 40739L,
                                'selection_end': 40739L,
                                'selection_start': 40739L,
                                'zoom': 0L}),
                              (loc('tests/test_aggregate.py'),
                               {'attrib-starts': [],
                                'code-line': '#Tests for data post-processin'\
        'g\n',
                                'first-line': 0L,
                                'folded-linenos': [],
                                'sel-line': 0L,
                                'sel-line-start': 0L,
                                'selection_end': 31L,
                                'selection_start': 0L,
                                'zoom': 0L}),
                              (loc('tests/test_create_model.py'),
                               {'attrib-starts': [('test_split_test_train|0|',
        70)],
                                'code-line': '    assert not test.empty\n',
                                'first-line': 62L,
                                'folded-linenos': [],
                                'sel-line': 75L,
                                'sel-line-start': 2759L,
                                'selection_end': 2759L,
                                'selection_start': 2759L,
                                'zoom': 0L}),
                              (loc('tests/test_extract.py'),
                               {'attrib-starts': [],
                                'code-line': '#test extract bounding classif'\
        'ication for DeepForest\n',
                                'first-line': 0L,
                                'folded-linenos': [],
                                'sel-line': 0L,
                                'sel-line-start': 0L,
                                'selection_end': 52L,
                                'selection_start': 0L,
                                'zoom': 0L})],
        'has-focus': False,
        'locked': False},
        [loc('aggregate.py'),
         loc('../../../opt/miniconda3/envs/Zooniverse/lib/python3.7/site-packages/pandas/core/indexes/base.py'),
         loc('create_model.py'),
         loc('extract.py'),
         loc('../../../opt/miniconda3/envs/Zooniverse/lib/python3.7/site-packages/_pytest/fixtures.py'),
         loc('../../../opt/miniconda3/envs/Zooniverse/lib/python3.7/site-packages/pandas/core/generic.py'),
         loc('../../../opt/miniconda3/envs/Zooniverse/lib/python3.7/site-packages/pandas/core/reshape/merge.py'),
         loc('tests/test_aggregate.py'),
         loc('tests/test_create_model.py'),
         loc('tests/test_extract.py')]),
                               'open_files': [u'tests/test_aggregate.py',
        u'../../../opt/miniconda3/envs/Zooniverse/lib/python3.7/site-packages/_pytest/fixtures.py',
        u'tests/test_extract.py',
        u'extract.py',
        u'create_model.py',
        u'tests/test_create_model.py',
        u'aggregate.py']},
        'saved_notebook_display': None,
        'split_percents': {0: 0.4336283185840708},
        'splits': 2,
        'tab_location': 'top',
        'traversal_pos': ((0,
                           5),
                          1612041085.101813),
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {0: 0.5},
                 'splits': 2,
                 'tab_location': 'left',
                 'traversal_pos': ((0,
                                    0),
                                   1606598671.623045),
                 'user_data': {}},
        'window-alloc': (0,
                         23,
                         1736,
                         1097)}]}
guimgr.recent-documents = [loc('aggregate.py'),
                           loc('tests/test_create_model.py'),
                           loc('create_model.py'),
                           loc('../../../opt/miniconda3/envs/Zooniverse/lib/python3.7/site-packages/pandas/core/generic.py'),
                           loc('extract.py'),
                           loc('tests/test_extract.py'),
                           loc('../../../opt/miniconda3/envs/Zooniverse/lib/python3.7/site-packages/_pytest/fixtures.py'),
                           loc('tests/test_aggregate.py'),
                           loc('../../../opt/miniconda3/envs/Zooniverse/lib/python3.7/site-packages/pandas/core/indexes/base.py'),
                           loc('../../../opt/miniconda3/envs/Zooniverse/lib/python3.7/site-packages/pandas/core/reshape/merge.py')]
guimgr.visual-state = {loc('../../DeepForest/setup.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../DeepForest/tests/test_deepforest.py'): {'a'\
        'ttrib-starts': [('test_reload_weights',
                          215)],
        'first-line': 198L,
        'folded-linenos': [],
        'sel-line': 218L,
        'sel-line-start': 7333L,
        'selection_end': 7369L,
        'selection_start': 7369L,
        'zoom': 0L},
                       loc('../../DeepForest_Model/GenerateAnchors.py'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 12L,
        'sel-line-start': 299L,
        'selection_end': 318L,
        'selection_start': 318L,
        'zoom': 0L},
                       loc('../../DeepForest_Model/generate.py'): {'attrib-s'\
        'tarts': [],
        'first-line': 225L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../DeepForest_Model/train.py'): {'attrib-star'\
        'ts': [('finetuning',
                40)],
        'first-line': 76L,
        'folded-linenos': [],
        'sel-line': 83L,
        'sel-line-start': 3812L,
        'selection_end': 3860L,
        'selection_start': 3860L,
        'zoom': 0L},
                       loc('../../DeepTreeAttention/DeepTreeAttention/generators/boxes.py'): {'a'\
        'ttrib-starts': [('generate_tfrecords',
                          23)],
        'first-line': 52L,
        'folded-linenos': [],
        'sel-line': 58L,
        'sel-line-start': 1671L,
        'selection_end': 1976L,
        'selection_start': 1671L,
        'zoom': 0L},
                       loc('../../DeepTreeAttention/DeepTreeAttention/generators/cleaning.py'): {'a'\
        'ttrib-starts': [('autoencoder_model|0|',
                          13)],
        'code-line': "    autoencoder.compile(optimizer='adam', loss='mse')"\
                     "\n",
        'first-line': 25L,
        'folded-linenos': [],
        'sel-line': 32L,
        'sel-line-start': 1336L,
        'selection_end': 1389L,
        'selection_start': 1389L,
        'zoom': 0L},
                       loc('../../DeepTreeAttention/DeepTreeAttention/generators/normalize.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../DeepTreeAttention/DeepTreeAttention/generators/outliers.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../DeepTreeAttention/DeepTreeAttention/trees.py'): {'a'\
        'ttrib-starts': [('AttentionModel|0|',
                          24),
                         ('AttentionModel|0|.find_outliers|0|',
                          393)],
        'code-line': '            error = tf.keras.losses.mean_squared_error'\
                     '(prediction, data)\n',
        'first-line': 348L,
        'folded-linenos': [],
        'sel-line': 419L,
        'sel-line-start': 20401L,
        'selection_end': 20455L,
        'selection_start': 20455L,
        'zoom': 0L},
                       loc('../../DeepTreeAttention/environment.yml'): {'att'\
        'rib-starts': [],
        'first-line': 18L,
        'folded-linenos': [],
        'sel-line': 28L,
        'sel-line-start': 384L,
        'selection_end': 404L,
        'selection_start': 384L,
        'zoom': 0L},
                       loc('../../DeepTreeAttention/tests/test_boxes.py'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../DeepTreeAttention/tests/test_trees.py'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 4L,
        'sel-line-start': 100L,
        'selection_end': 135L,
        'selection_start': 100L,
        'zoom': 0L},
                       loc('SLURM/submit_job.sbatch'): {'attrib-starts': [],
        'first-line': 1L,
        'folded-linenos': [],
        'sel-line': 20L,
        'sel-line-start': 821L,
        'selection_end': 894L,
        'selection_start': 821L,
        'zoom': 0L},
                       loc('SLURM/submit_test.sbatch'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 14L,
        'sel-line-start': 542L,
        'selection_end': 542L,
        'selection_start': 542L,
        'zoom': 0L},
                       loc('SLURM/train.sbatch'): {'attrib-starts': [],
        'first-line': 11L,
        'folded-linenos': [],
        'sel-line': 23L,
        'sel-line-start': 914L,
        'selection_end': 919L,
        'selection_start': 919L,
        'zoom': 0L},
                       loc('aggregate.py'): {'attrib-starts': [('load_classi'\
        'fications|0|',
        41)],
        'code-line': '    df  = df[df.workflow_name =="Counts and Behavior"]'\
                     '          \n',
        'first-line': 35L,
        'folded-linenos': [],
        'sel-line': 47L,
        'sel-line-start': 1647L,
        'selection_end': 1662L,
        'selection_start': 1662L,
        'zoom': 0L},
                       loc('create_model.py'): {'attrib-starts': [('shapefil'\
        'e_to_annotations|0|',
        13)],
        'code-line': '    gdf = gp.read_file(shapefile)\n',
        'first-line': 19L,
        'folded-linenos': [],
        'sel-line': 24L,
        'sel-line-start': 804L,
        'selection_end': 804L,
        'selection_start': 804L,
        'zoom': 0L},
                       loc('cron.txt'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 5L,
        'sel-line-start': 281L,
        'selection_end': 304L,
        'selection_start': 304L,
        'zoom': 0L},
                       loc('environment.yml'): {'attrib-starts': [],
        'first-line': 6L,
        'folded-linenos': [],
        'sel-line': 16L,
        'sel-line-start': 212L,
        'selection_end': 226L,
        'selection_start': 226L,
        'zoom': 0L},
                       loc('extract.py'): {'attrib-starts': [('run|0|',
        74)],
        'code-line': '    grouped_df = joined_df.groupby("url")\n',
        'first-line': 67L,
        'folded-linenos': [],
        'sel-line': 98L,
        'sel-line-start': 3245L,
        'selection_end': 3286L,
        'selection_start': 3286L,
        'zoom': 0L},
                       loc('extract_old.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 17L,
        'sel-line-start': 528L,
        'selection_end': 532L,
        'selection_start': 532L,
        'zoom': 0L},
                       loc('files_to_mapbox.sh'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('files_to_mapbox.txt'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('manifest.py'): {'attrib-starts': [],
        'first-line': 159L,
        'folded-linenos': [],
        'sel-line': 201L,
        'sel-line-start': 5986L,
        'selection_end': 6005L,
        'selection_start': 6002L,
        'zoom': 0L},
                       loc('nest_detection.py'): {'attrib-starts': [('detect'\
        '_nests|0|',
        96)],
        'code-line': '    filename = "{}/nest_detections.shp".format(savedir'\
                     ')\n',
        'first-line': 102L,
        'folded-linenos': [],
        'sel-line': 112L,
        'sel-line-start': 3138L,
        'selection_end': 3176L,
        'selection_start': 3176L,
        'zoom': 0L},
                       loc('predict.py'): {'attrib-starts': [('run',
        81)],
        'first-line': 85L,
        'folded-linenos': [],
        'sel-line': 92L,
        'sel-line-start': 3240L,
        'selection_end': 3343L,
        'selection_start': 3240L,
        'zoom': 0L},
                       loc('sample_predictions.py'): {'attrib-starts': [],
        'code-line': 'model.evaluate_generator(annotations="/orange/ewhite/e'\
                     'verglades/Zooniverse/parsed_images/test.csv", color_an'\
                     'notation = [255,204,0], color_detection = [0,145,255],'\
                     ' thickness_annotate = 2, thickness_detect = 2)',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 6L,
        'sel-line-start': 286L,
        'selection_end': 494L,
        'selection_start': 494L,
        'zoom': 0L},
                       loc('tests/data/Vacation_03192020_203.tif'): {'attrib'\
        '-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('tests/submit_test.sbatch'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 7L,
        'sel-line-start': 288L,
        'selection_end': 313L,
        'selection_start': 313L,
        'zoom': 0L},
                       loc('tests/test_aggregate.py'): {'attrib-starts': [('t'\
        'est_download_subject_data|0|',
        80)],
        'code-line': 'def test_download_subject_data():\n',
        'first-line': 65L,
        'folded-linenos': [],
        'sel-line': 80L,
        'sel-line-start': 3184L,
        'selection_end': 3217L,
        'selection_start': 3184L,
        'zoom': 0L},
                       loc('tests/test_create_model.py'): {'attrib-starts': [('t'\
        'est_shapefile_to_annotations|0|',
        32)],
        'code-line': '    \n',
        'first-line': 29L,
        'folded-linenos': [],
        'sel-line': 47L,
        'sel-line-start': 1631L,
        'selection_end': 1635L,
        'selection_start': 1635L,
        'zoom': 0L},
                       loc('tests/test_tile_raster.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('tile_raster.py'): {'attrib-starts': [('run',
        63)],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 63L,
        'sel-line-start': 2283L,
        'selection_end': 2321L,
        'selection_start': 2317L,
        'zoom': 0L},
                       loc('upload.sh'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 1L,
        'sel-line-start': 31L,
        'selection_end': 157L,
        'selection_start': 31L,
        'zoom': 0L},
                       loc('upload_mapbox.py'): {'attrib-starts': [],
        'first-line': 1L,
        'folded-linenos': [],
        'sel-line': 8L,
        'sel-line-start': 181L,
        'selection_end': 245L,
        'selection_start': 245L,
        'zoom': 0L},
                       loc('utils.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../NEON_crown_maps/crown_maps/start_cluster.py'): {'a'\
        'ttrib-starts': [],
        'first-line': 76L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 3092L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../NEON_crown_maps/hard_mining.py'): {'attrib'\
        '-starts': [],
        'first-line': 98L,
        'folded-linenos': [],
        'sel-line': 128L,
        'sel-line-start': 4764L,
        'selection_end': 4764L,
        'selection_start': 4764L,
        'zoom': 0L},
                       loc('../../NEON_crown_maps/main.py'): {'attrib-starts': [('g'\
        'enerate_tfrecord',
        76)],
        'first-line': 115L,
        'folded-linenos': [],
        'sel-line': 130L,
        'sel-line-start': 4560L,
        'selection_end': 4592L,
        'selection_start': 4589L,
        'zoom': 0L},
                       loc('../../NEON_crown_maps/predict.py'): {'attrib-sta'\
        'rts': [],
        'first-line': 102L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../NEON_crown_maps/tests/test_sampling.py'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 2L,
        'sel-line-start': 25L,
        'selection_end': 132L,
        'selection_start': 25L,
        'zoom': 0L},
                       loc('../../NeonTreeEvaluation/utilities/competition_plots.py'): {'a'\
        'ttrib-starts': [('run',
                          3)],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 8L,
        'sel-line-start': 194L,
        'selection_end': 222L,
        'selection_start': 222L,
        'zoom': 0L},
                       loc('../../deepforest-feedstock/recipe/meta.yaml'): {'a'\
        'ttrib-starts': [],
        'code-line': '  run:\n',
        'first-line': 13L,
        'folded-linenos': [],
        'sel-line': 28L,
        'sel-line-start': 625L,
        'selection_end': 631L,
        'selection_start': 631L,
        'zoom': 0L},
                       loc('../../../miniconda3/envs/DeepTreeAttention/lib/python3.7/site-packages/pandas/core/dtypes/cast.py'): {'a'\
        'ttrib-starts': [('astype_nansafe',
                          798)],
        'first-line': 793L,
        'folded-linenos': [],
        'sel-line': 798L,
        'sel-line-start': 24438L,
        'selection_end': 24438L,
        'selection_start': 24438L,
        'zoom': 0L},
                       loc('../../../miniconda3/envs/Zooniverse/lib/python3.6/site-packages/_pytest/python.py'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../../miniconda3/envs/Zooniverse/lib/python3.7/site-packages/PIL/ImageDraw.py'): {'a'\
        'ttrib-starts': [('ImageDraw',
                          46),
                         ('ImageDraw.__init__',
                          47)],
        'first-line': 47L,
        'folded-linenos': [],
        'sel-line': 58L,
        'sel-line-start': 1886L,
        'selection_end': 1886L,
        'selection_start': 1886L,
        'zoom': 0L},
                       loc('../../../miniconda3/envs/Zooniverse/lib/python3.7/site-packages/_pytest/_code/code.py'): {'a'\
        'ttrib-starts': [('TracebackEntry',
                          182),
                         ('TracebackEntry.statement',
                          209)],
        'first-line': 196L,
        'folded-linenos': [],
        'sel-line': 212L,
        'sel-line-start': 6434L,
        'selection_end': 6434L,
        'selection_start': 6434L,
        'zoom': 0L},
                       loc('../../../miniconda3/envs/Zooniverse/lib/python3.7/site-packages/_pytest/config/__init__.py'): {'a'\
        'ttrib-starts': [('main',
                          94)],
        'first-line': 112L,
        'folded-linenos': [],
        'sel-line': 124L,
        'sel-line-start': 3538L,
        'selection_end': 3538L,
        'selection_start': 3538L,
        'zoom': 0L},
                       loc('../../../miniconda3/envs/Zooniverse/lib/python3.7/site-packages/_pytest/fixtures.py'): {'a'\
        'ttrib-starts': [('FixtureRequest',
                          342),
                         ('FixtureRequest._getnextfixturedef',
                          380)],
        'first-line': 381L,
        'folded-linenos': [],
        'sel-line': 391L,
        'sel-line-start': 14730L,
        'selection_end': 14792L,
        'selection_start': 14730L,
        'zoom': 0L},
                       loc('../../../miniconda3/envs/Zooniverse/lib/python3.7/site-packages/_pytest/python.py'): {'a'\
        'ttrib-starts': [('Module',
                          440),
                         ('Module._importtestmodule',
                          508)],
        'first-line': 524L,
        'folded-linenos': [],
        'sel-line': 535L,
        'sel-line-start': 19937L,
        'selection_end': 19973L,
        'selection_start': 19973L,
        'zoom': 0L},
                       loc('../../../miniconda3/envs/Zooniverse/lib/python3.7/site-packages/keras_retinanet/preprocessing/csv_generator.py'): {'a'\
        'ttrib-starts': [('CSVGenerator',
                          113),
                         ('CSVGenerator.__init__',
                          119)],
        'first-line': 147L,
        'folded-linenos': [],
        'sel-line': 159L,
        'sel-line-start': 5566L,
        'selection_end': 5566L,
        'selection_start': 5566L,
        'zoom': 0L},
                       loc('../../../miniconda3/envs/Zooniverse/lib/python3.7/site-packages/matplotlib/image.py'): {'a'\
        'ttrib-starts': [('_ImageBase',
                          219),
                         ('_ImageBase.set_data',
                          671)],
        'first-line': 658L,
        'folded-linenos': [],
        'sel-line': 676L,
        'sel-line-start': 26227L,
        'selection_end': 26227L,
        'selection_start': 26227L,
        'zoom': 0L},
                       loc('../../../miniconda3/envs/Zooniverse/lib/python3.7/site-packages/pandas/core/generic.py'): {'a'\
        'ttrib-starts': [('NDFrame',
                          150),
                         ('NDFrame.__getattr__',
                          5256)],
        'first-line': 5261L,
        'folded-linenos': [],
        'sel-line': 5273L,
        'sel-line-start': 176248L,
        'selection_end': 176248L,
        'selection_start': 176248L,
        'zoom': 0L},
                       loc('../../../miniconda3/envs/Zooniverse/lib/python3.7/site-packages/pandas/core/internals/construction.py'): {'a'\
        'ttrib-starts': [('extract_index',
                          330)],
        'first-line': 344L,
        'folded-linenos': [],
        'sel-line': 353L,
        'sel-line-start': 11302L,
        'selection_end': 11345L,
        'selection_start': 11302L,
        'zoom': 0L},
                       loc('../../../miniconda3/envs/Zooniverse/lib/python3.7/site-packages/pandas/core/reshape/concat.py'): {'a'\
        'ttrib-starts': [('_Concatenator',
                          286),
                         ('_Concatenator.__init__',
                          291)],
        'first-line': 320L,
        'folded-linenos': [],
        'sel-line': 308L,
        'sel-line-start': 9038L,
        'selection_end': 9038L,
        'selection_start': 9038L,
        'zoom': 0L},
                       loc('../../../miniconda3/envs/Zooniverse/lib/python3.7/site-packages/pandas/io/common.py'): {'a'\
        'ttrib-starts': [('get_filepath_or_buffer',
                          143)],
        'first-line': 188L,
        'folded-linenos': [],
        'sel-line': 198L,
        'sel-line-start': 5552L,
        'selection_end': 5636L,
        'selection_start': 5552L,
        'zoom': 0L},
                       loc('../../../miniconda3/envs/Zooniverse/lib/python3.7/site-packages/pandas/io/formats/csvs.py'): {'a'\
        'ttrib-starts': [('CSVFormatter',
                          32),
                         ('CSVFormatter.__init__',
                          33)],
        'first-line': 101L,
        'folded-linenos': [],
        'sel-line': 113L,
        'sel-line-start': 3256L,
        'selection_end': 3256L,
        'selection_start': 3256L,
        'zoom': 0L},
                       loc('../../../miniconda3/envs/Zooniverse/lib/python3.7/site-packages/rasterio/env.py'): {'a'\
        'ttrib-starts': [('ensure_env_with_credentials',
                          395),
                         ('ensure_env_with_credentials.wrapper',
                          415)],
        'first-line': 422L,
        'folded-linenos': [],
        'sel-line': 433L,
        'sel-line-start': 13756L,
        'selection_end': 13756L,
        'selection_start': 13756L,
        'zoom': 0L},
                       loc('../../../miniconda3/envs/Zooniverse/lib/python3.7/site-packages/requests/adapters.py'): {'a'\
        'ttrib-starts': [('HTTPAdapter',
                          83),
                         ('HTTPAdapter.send',
                          393)],
        'first-line': 478L,
        'folded-linenos': [],
        'sel-line': 499L,
        'sel-line-start': 20078L,
        'selection_end': 20112L,
        'selection_start': 20112L,
        'zoom': 0L},
                       loc('../../../opt/miniconda3/envs/Zooniverse/lib/python3.7/site-packages/_pytest/config/__init__.py'): {'a'\
        'ttrib-starts': [('_assertion_supported|0|',
                          1508)],
        'code-line': '        assert False\n',
        'first-line': 1489L,
        'folded-linenos': [],
        'sel-line': 1510L,
        'sel-line-start': 53908L,
        'selection_end': 53908L,
        'selection_start': 53908L,
        'zoom': 0L},
                       loc('../../../opt/miniconda3/envs/Zooniverse/lib/python3.7/site-packages/fiona/__init__.py'): {'a'\
        'ttrib-starts': [('open|0|',
                          89)],
        'code-line': '            raise IOError("no such file or directory: '\
                     '%r" % path)\n',
        'first-line': 142L,
        'folded-linenos': [],
        'sel-line': 161L,
        'sel-line-start': 5939L,
        'selection_end': 5939L,
        'selection_start': 5939L,
        'zoom': 0L},
                       loc('../../../opt/miniconda3/envs/Zooniverse/lib/python3.7/site-packages/geopandas/io/file.py'): {'a'\
        'ttrib-starts': [('read_file|0|',
                          40)],
        'code-line': '        with reader(path_or_bytes, **kwargs) as featur'\
                     'es:\n',
        'first-line': 63L,
        'folded-linenos': [],
        'sel-line': 75L,
        'sel-line-start': 2007L,
        'selection_end': 2007L,
        'selection_start': 2007L,
        'zoom': 0L},
                       loc('../../../opt/miniconda3/envs/Zooniverse/lib/python3.7/site-packages/pandas/core/generic.py'): {'a'\
        'ttrib-starts': [('NDFrame|0|',
                          155),
                         ('NDFrame|0|.__getattr__|0|',
                          5122)],
        'code-line': '            or name in self._metadata\n',
        'first-line': 5127L,
        'folded-linenos': [],
        'sel-line': 5131L,
        'sel-line-start': 174077L,
        'selection_end': 174114L,
        'selection_start': 174114L,
        'zoom': 0L},
                       loc('../../../opt/miniconda3/envs/Zooniverse/lib/python3.7/site-packages/pandas/core/indexing.py'): {'a'\
        'ttrib-starts': [('_iLocIndexer|0|',
                          1323),
                         ('_iLocIndexer|0|._validate_integer|0|',
                          1418)],
        'code-line': '            raise IndexError("single positional indexe'\
                     'r is out-of-bounds")\n',
        'first-line': 1419L,
        'folded-linenos': [],
        'sel-line': 1436L,
        'sel-line-start': 46632L,
        'selection_end': 46632L,
        'selection_start': 46632L,
        'zoom': 0L},
                       loc('../../../opt/miniconda3/envs/Zooniverse/lib/python3.7/site-packages/pyproj/__init__.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '',
        'first-line': 68L,
        'folded-linenos': [],
        'sel-line': 80L,
        'sel-line-start': 2600L,
        'selection_end': 2600L,
        'selection_start': 2600L,
        'zoom': 0L}}
proj.build-cmd = {None: ('default',
                         None)}
proj.env-vars = {None: ('default',
                        [u''])}
proj.pyexec = {None: ('custom',
                      u'/Users/benweinstein/opt/miniconda3/envs/Zooniverse/bin/python')}
proj.vcs-system-config = ('prefs',
                          {'bzr': {'versioncontrol.bzr.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.bzr.executable': u'bzr'},
                           'cvs': {'versioncontrol.cvs.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.cvs.executable': u'cvs',
                                   'versioncontrol.cvs.extra-global-args': '-'\
        'z3'},
                           'git': {'versioncontrol.git.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.git.executable': u'git',
                                   'versioncontrol.git.use-porcelain': True},
                           'hg': {'versioncontrol.hg.active': 'active-if-pro'\
        'ject-dir',
                                  'versioncontrol.hg.dont-find-unregistered': True,
                                  'versioncontrol.hg.executable': u'hg',
                                  'versioncontrol.hg.extra-global-args': '--'\
        'encoding=utf8'},
                           'perforce': {'versioncontrol.perforce.active': 'n'\
        'ot-active',
        'versioncontrol.perforce.dont-find-unregistered': True,
        'versioncontrol.perforce.executable': u'p4',
        'versioncontrol.perforce.extra-global-args': ''},
                           'svn': {'versioncontrol.svn.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.svn.executable': u'svn',
                                   'versioncontrol.svn.extra-global-args': '',
                                   'versioncontrol.svn.svnadmin-executable': u'svnadmin'}})
search.search-history = [u'debug',
                         u'shapefile_to_annotations',
                         u'classifications',
                         u'selected_i',
                         u'download_data',
                         u'load_classifications',
                         u'valid_nests',
                         u'is_valid',
                         u'sample_if',
                         u'split_test_train',
                         u'split',
                         u'test',
                         u'evaluate_generator',
                         u'test_path',
                         u'evaluate_gen',
                         u'empty',
                         u'tile_raster',
                         u'summarize',
                         u'32617',
                         u'snapshot']
testing.run-as-package-module = {None: False}
testing.stored-results = (1,
                          [(u'/Users/benweinstein/Documents/EvergladesWadingBird/Zooniverse/tests/test_aggregate.py',
                            [('test_run[True]',
                              0,
                              None,
                              None,
                              None,
                              1612029001,
                              69),
                             ('test_download_subject_data',
                              0,
                              None,
                              None,
                              None,
                              1611940605,
                              81),
                             ('test_parse_front_screen',
                              0,
                              None,
                              None,
                              None,
                              1611940204,
                              20),
                             ('test_spatial_join',
                              0,
                              None,
                              None,
                              None,
                              1612028351,
                              56),
                             ('test_parse_annotations',
                              0,
                              None,
                              None,
                              None,
                              1611940204,
                              31),
                             ('test_parse_additional_observations',
                              0,
                              None,
                              None,
                              None,
                              1611940204,
                              24),
                             ('test_load_classifications',
                              0,
                              None,
                              None,
                              None,
                              1611940204,
                              16),
                             ('test_parse_subject_data',
                              0,
                              None,
                              None,
                              None,
                              1611940204,
                              36),
                             ('test_parse_birds',
                              0,
                              None,
                              None,
                              None,
                              1611940204,
                              41),
                             ('test_project_point',
                              0,
                              None,
                              None,
                              None,
                              1611940204,
                              48),
                             ('test_run[False]',
                              0,
                              None,
                              None,
                              None,
                              1612029001,
                              69),
                             ('test_download_data[False]',
                              0,
                              None,
                              None,
                              None,
                              1611940613,
                              75)]),
                           (u'/Users/benweinstein/Documents/EvergladesWadingBird/Zooniverse/tests/test_extract.py',
                            [('test_run',
                              0,
                              None,
                              None,
                              None,
                              1612031095,
                              12),
                             ('test_extract_empty',
                              0,
                              None,
                              None,
                              None,
                              1612031095,
                              18)]),
                           (u'/Users/benweinstein/Documents/EvergladesWadingBird/Zooniverse/tests/test_nest_aggregate.py',
                            [('test_parse_subject_data',
                              1,
                              None,
                              None,
                              ('',
                               "<ExceptionInfo IndexError('single positional"\
                               " indexer is out-of-bounds') tblen=4>",
                               'IndexError: single positional indexer is out'\
                               '-of-bounds',
                               [(u'/Users/benweinstein/Documents/EvergladesWadingBird/Zooniverse/tests/test_nest_aggregate.py',
                                 '/Users/benweinstein/Documents/EvergladesWa'\
                                 'dingBird/Zooniverse/tests/test_nest_aggreg'\
                                 'ate.py',
                                 37,
                                 'test_parse_subject_data',
                                 None,
                                 '    subject_data = nest_aggregate.parse_su'\
                                 'bject_data(csv_data.loc[csv_data["classifi'\
                                 'cation_id"]==236402602].subject_data.iloc['\
                                 '0])'),
                                (u'/Users/benweinstein/opt/miniconda3/envs/Zooniverse/lib/python3.7/site-packages/pandas/core/indexing.py',
                                 '/Users/benweinstein/opt/miniconda3/envs/Zo'\
                                 'oniverse/lib/python3.7/site-packages/panda'\
                                 's/core/indexing.py',
                                 879,
                                 '__getitem__',
                                 None,
                                 '            return self._getitem_axis(mayb'\
                                 'e_callable, axis=axis)'),
                                (u'/Users/benweinstein/opt/miniconda3/envs/Zooniverse/lib/python3.7/site-packages/pandas/core/indexing.py',
                                 '/Users/benweinstein/opt/miniconda3/envs/Zo'\
                                 'oniverse/lib/python3.7/site-packages/panda'\
                                 's/core/indexing.py',
                                 1496,
                                 '_getitem_axis',
                                 None,
                                 '            self._validate_integer(key, ax'\
                                 'is)'),
                                (u'/Users/benweinstein/opt/miniconda3/envs/Zooniverse/lib/python3.7/site-packages/pandas/core/indexing.py',
                                 '/Users/benweinstein/opt/miniconda3/envs/Zo'\
                                 'oniverse/lib/python3.7/site-packages/panda'\
                                 's/core/indexing.py',
                                 1437,
                                 '_validate_integer',
                                 None,
                                 '            raise IndexError("single posit'\
                                 'ional indexer is out-of-bounds")')],
                               0,
                               None,
                               None,
                               None,
                               None),
                              1611614775,
                              35),
                             ('test_parse_annotations',
                              1,
                              None,
                              None,
                              ('',
                               "<ExceptionInfo TypeError(\"'NoneType' object"\
                               " does not support item assignment\") tblen=2"\
                               ">",
                               "TypeError: 'NoneType' object does not suppor"\
                               "t item assignment",
                               [(u'/Users/benweinstein/Documents/EvergladesWadingBird/Zooniverse/tests/test_nest_aggregate.py',
                                 '/Users/benweinstein/Documents/EvergladesWa'\
                                 'dingBird/Zooniverse/tests/test_nest_aggreg'\
                                 'ate.py',
                                 33,
                                 'test_parse_annotations',
                                 None,
                                 '    annotations = nest_aggregate.parse_ann'\
                                 'otations(csv_data.loc[7971].annotations)'),
                                (u'/Users/benweinstein/Documents/EvergladesWadingBird/Zooniverse/nest_aggregate.py',
                                 '/Users/benweinstein/Documents/EvergladesWa'\
                                 'dingBird/Zooniverse/nest_aggregate.py',
                                 107,
                                 'parse_annotations',
                                 None,
                                 '    response["valid_nest"] = parse_questio'\
                                 'n_task(x)')],
                               0,
                               None,
                               None,
                               None,
                               None),
                              1611614775,
                              30),
                             ('test_load_classifications',
                              0,
                              None,
                              None,
                              None,
                              1611614775,
                              16),
                             ('test_run[False]',
                              1,
                              None,
                              None,
                              ('',
                               "<ExceptionInfo TypeError(\"'NoneType' object"\
                               " does not support item assignment\") tblen=4"\
                               ">",
                               "TypeError: 'NoneType' object does not suppor"\
                               "t item assignment",
                               [(u'/Users/benweinstein/Documents/EvergladesWadingBird/Zooniverse/tests/test_nest_aggregate.py',
                                 '/Users/benweinstein/Documents/EvergladesWa'\
                                 'dingBird/Zooniverse/tests/test_nest_aggreg'\
                                 'ate.py',
                                 69,
                                 'test_run',
                                 None,
                                 '    nest_aggregate.run("data/everglades-wa'\
                                 'tch-classifications.csv", min_version=min_'\
                                 'version, download=download, generate=False'\
                                 ', savedir="output",debug=False)'),
                                (u'/Users/benweinstein/Documents/EvergladesWadingBird/Zooniverse/nest_aggregate.py',
                                 '/Users/benweinstein/Documents/EvergladesWa'\
                                 'dingBird/Zooniverse/nest_aggregate.py',
                                 279,
                                 'run',
                                 None,
                                 '    df = parse_birds(df)'),
                                (u'/Users/benweinstein/Documents/EvergladesWadingBird/Zooniverse/nest_aggregate.py',
                                 '/Users/benweinstein/Documents/EvergladesWa'\
                                 'dingBird/Zooniverse/nest_aggregate.py',
                                 140,
                                 'parse_birds',
                                 None,
                                 '        annotations = parse_annotations(ro'\
                                 'w.annotations)'),
                                (u'/Users/benweinstein/Documents/EvergladesWadingBird/Zooniverse/nest_aggregate.py',
                                 '/Users/benweinstein/Documents/EvergladesWa'\
                                 'dingBird/Zooniverse/nest_aggregate.py',
                                 107,
                                 'parse_annotations',
                                 None,
                                 '    response["valid_nest"] = parse_questio'\
                                 'n_task(x)')],
                               0,
                               None,
                               None,
                               None,
                               None),
                              1611614775,
                              66),
                             ('test_project_point',
                              1,
                              None,
                              None,
                              ('',
                               "<ExceptionInfo TypeError(\"'NoneType' object"\
                               " does not support item assignment\") tblen=3"\
                               ">",
                               "TypeError: 'NoneType' object does not suppor"\
                               "t item assignment",
                               [(u'/Users/benweinstein/Documents/EvergladesWadingBird/Zooniverse/tests/test_nest_aggregate.py',
                                 '/Users/benweinstein/Documents/EvergladesWa'\
                                 'dingBird/Zooniverse/tests/test_nest_aggreg'\
                                 'ate.py',
                                 49,
                                 'test_project_point',
                                 None,
                                 '    df = nest_aggregate.parse_birds(csv_da'\
                                 'ta.iloc[0:100])'),
                                (u'/Users/benweinstein/Documents/EvergladesWadingBird/Zooniverse/nest_aggregate.py',
                                 '/Users/benweinstein/Documents/EvergladesWa'\
                                 'dingBird/Zooniverse/nest_aggregate.py',
                                 140,
                                 'parse_birds',
                                 None,
                                 '        annotations = parse_annotations(ro'\
                                 'w.annotations)'),
                                (u'/Users/benweinstein/Documents/EvergladesWadingBird/Zooniverse/nest_aggregate.py',
                                 '/Users/benweinstein/Documents/EvergladesWa'\
                                 'dingBird/Zooniverse/nest_aggregate.py',
                                 107,
                                 'parse_annotations',
                                 None,
                                 '    response["valid_nest"] = parse_questio'\
                                 'n_task(x)')],
                               0,
                               None,
                               None,
                               None,
                               None),
                              1611614775,
                              47),
                             ('test_download_subject_data',
                              0,
                              None,
                              None,
                              None,
                              1611614775,
                              80),
                             ('test_parse_question_task',
                              0,
                              None,
                              None,
                              None,
                              1611614824,
                              20),
                             ('test_download_data[False]',
                              0,
                              None,
                              None,
                              None,
                              1611614775,
                              74),
                             ('test_run[True]',
                              1,
                              None,
                              None,
                              ('',
                               "<ExceptionInfo TypeError(\"'NoneType' object"\
                               " does not support item assignment\") tblen=4"\
                               ">",
                               "TypeError: 'NoneType' object does not suppor"\
                               "t item assignment",
                               [(u'/Users/benweinstein/Documents/EvergladesWadingBird/Zooniverse/tests/test_nest_aggregate.py',
                                 '/Users/benweinstein/Documents/EvergladesWa'\
                                 'dingBird/Zooniverse/tests/test_nest_aggreg'\
                                 'ate.py',
                                 69,
                                 'test_run',
                                 None,
                                 '    nest_aggregate.run("data/everglades-wa'\
                                 'tch-classifications.csv", min_version=min_'\
                                 'version, download=download, generate=False'\
                                 ', savedir="output",debug=False)'),
                                (u'/Users/benweinstein/Documents/EvergladesWadingBird/Zooniverse/nest_aggregate.py',
                                 '/Users/benweinstein/Documents/EvergladesWa'\
                                 'dingBird/Zooniverse/nest_aggregate.py',
                                 279,
                                 'run',
                                 None,
                                 '    df = parse_birds(df)'),
                                (u'/Users/benweinstein/Documents/EvergladesWadingBird/Zooniverse/nest_aggregate.py',
                                 '/Users/benweinstein/Documents/EvergladesWa'\
                                 'dingBird/Zooniverse/nest_aggregate.py',
                                 140,
                                 'parse_birds',
                                 None,
                                 '        annotations = parse_annotations(ro'\
                                 'w.annotations)'),
                                (u'/Users/benweinstein/Documents/EvergladesWadingBird/Zooniverse/nest_aggregate.py',
                                 '/Users/benweinstein/Documents/EvergladesWa'\
                                 'dingBird/Zooniverse/nest_aggregate.py',
                                 107,
                                 'parse_annotations',
                                 None,
                                 '    response["valid_nest"] = parse_questio'\
                                 'n_task(x)')],
                               0,
                               None,
                               None,
                               None,
                               None),
                              1611614775,
                              66),
                             ('test_parse_birds',
                              1,
                              None,
                              None,
                              ('',
                               "<ExceptionInfo TypeError(\"'NoneType' object"\
                               " does not support item assignment\") tblen=3"\
                               ">",
                               "TypeError: 'NoneType' object does not suppor"\
                               "t item assignment",
                               [(u'/Users/benweinstein/Documents/EvergladesWadingBird/Zooniverse/tests/test_nest_aggregate.py',
                                 '/Users/benweinstein/Documents/EvergladesWa'\
                                 'dingBird/Zooniverse/tests/test_nest_aggreg'\
                                 'ate.py',
                                 42,
                                 'test_parse_birds',
                                 None,
                                 '    df = nest_aggregate.parse_birds(csv_da'\
                                 'ta.iloc[0:100])'),
                                (u'/Users/benweinstein/Documents/EvergladesWadingBird/Zooniverse/nest_aggregate.py',
                                 '/Users/benweinstein/Documents/EvergladesWa'\
                                 'dingBird/Zooniverse/nest_aggregate.py',
                                 140,
                                 'parse_birds',
                                 None,
                                 '        annotations = parse_annotations(ro'\
                                 'w.annotations)'),
                                (u'/Users/benweinstein/Documents/EvergladesWadingBird/Zooniverse/nest_aggregate.py',
                                 '/Users/benweinstein/Documents/EvergladesWa'\
                                 'dingBird/Zooniverse/nest_aggregate.py',
                                 107,
                                 'parse_annotations',
                                 None,
                                 '    response["valid_nest"] = parse_questio'\
                                 'n_task(x)')],
                               0,
                               None,
                               None,
                               None,
                               None),
                              1611614775,
                              40),
                             ('test_spatial_join',
                              1,
                              None,
                              None,
                              ('',
                               "<ExceptionInfo TypeError(\"'NoneType' object"\
                               " does not support item assignment\") tblen=3"\
                               ">",
                               "TypeError: 'NoneType' object does not suppor"\
                               "t item assignment",
                               [(u'/Users/benweinstein/Documents/EvergladesWadingBird/Zooniverse/tests/test_nest_aggregate.py',
                                 '/Users/benweinstein/Documents/EvergladesWa'\
                                 'dingBird/Zooniverse/tests/test_nest_aggreg'\
                                 'ate.py',
                                 57,
                                 'test_spatial_join',
                                 None,
                                 '    df = nest_aggregate.parse_birds(debug_'\
                                 'data)'),
                                (u'/Users/benweinstein/Documents/EvergladesWadingBird/Zooniverse/nest_aggregate.py',
                                 '/Users/benweinstein/Documents/EvergladesWa'\
                                 'dingBird/Zooniverse/nest_aggregate.py',
                                 140,
                                 'parse_birds',
                                 None,
                                 '        annotations = parse_annotations(ro'\
                                 'w.annotations)'),
                                (u'/Users/benweinstein/Documents/EvergladesWadingBird/Zooniverse/nest_aggregate.py',
                                 '/Users/benweinstein/Documents/EvergladesWa'\
                                 'dingBird/Zooniverse/nest_aggregate.py',
                                 107,
                                 'parse_annotations',
                                 None,
                                 '    response["valid_nest"] = parse_questio'\
                                 'n_task(x)')],
                               0,
                               None,
                               None,
                               None,
                               None),
                              1611614775,
                              54),
                             ('test_parse_nest_location',
                              0,
                              None,
                              None,
                              None,
                              1611616240,
                              25)]),
                           (u'/Users/benweinstein/Documents/EvergladesWadingBird/Zooniverse/tests/test_create_model.py',
                            [('test_empty_image',
                              0,
                              None,
                              None,
                              None,
                              1612037647,
                              47),
                             ('test_format_shapefiles',
                              0,
                              None,
                              None,
                              None,
                              1612037647,
                              61),
                             ('test_shapefile_to_annotations',
                              0,
                              None,
                              None,
                              None,
                              1612037647,
                              26),
                             ('test_plot_recall_curve',
                              0,
                              None,
                              None,
                              None,
                              1612037647,
                              54),
                             ('test_split_test_train',
                              1,
                              None,
                              None,
                              ('',
                               "<ExceptionInfo AssertionError('assert not Tr"\
                               "ue\\n +  where True = Empty DataFrame\\\\nCo"\
                               "lumns: [image_path, xmin, ymin, xmax, ymax, "\
                               "label]\\\\nIndex: [].empty') tblen=1>",
                               'AssertionError: assert not True\n +  where T'\
                               'rue = Empty DataFrame\\nColumns: [image_path'\
                               ', xmin, ymin, xmax, ymax, label]\\nIndex: []'\
                               '.empty',
                               [(u'/Users/benweinstein/Documents/EvergladesWadingBird/Zooniverse/tests/test_create_model.py',
                                 '/Users/benweinstein/Documents/EvergladesWa'\
                                 'dingBird/Zooniverse/tests/test_create_mode'\
                                 'l.py',
                                 76,
                                 'test_split_test_train',
                                 None,
                                 '    assert not test.empty')],
                               0,
                               None,
                               None,
                               None,
                               None),
                              1612037647,
                              70)])],
                          {})
