#!wing
#!version=6.0
##################################################################
# Wing IDE project file : User-specific branch                   #
##################################################################
[user attributes]
debug.exceptions-ignored = {loc('../../../miniconda3/envs/Zooniverse/lib/python3.7/site-packages/_pytest/_code/code.py'): {213: True},
                            loc('../../../miniconda3/envs/Zooniverse/lib/python3.7/site-packages/_pytest/config/__init__.py'): {1179: True}}
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'cNyyWhTuba9As824nEqL4DMa8p'\
        'ddQX4l',
        'size-state': 'fullscreen',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [0,
                                   0],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.311235170969993,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'expanded-nodes': [(0,),
        (1,),
        (1,
         0),
        (3,)],
                                 'selected-nodes': [(13,)],
                                 'top-node': (1,
        5)}},
        'tree-style': 'deep'}}),
                              ('browser',
                               'tall',
                               0,
                               {}),
                              ('snippets',
                               'tall',
                               0,
                               {}),
                              ('source-assistant',
                               'tall',
                               2,
                               {}),
                              ('debug-stack',
                               'tall',
                               1,
                               {}),
                              ('indent',
                               'tall',
                               2,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [5,
                          1],
        'notebook_display': 'normal',
        'notebook_percent': 0.301452784503632,
        'override_title': None,
        'pagelist': [('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 46,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': u'version',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 46,
                                       'fReplaceText': u'df',
                                       'fReverse': False,
                                       'fSearchText': u'tile_raster',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False}}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('debug-exceptions',
                      'wide',
                      0,
                      {}),
                     ('debug-breakpoints',
                      'wide',
                      0,
                      {'tree-state': []}),
                     ('testing',
                      'wide',
                      0,
                      {'added-files': [loc('tests/test_aggregate.py'),
                                       loc('tests/test_extract.py')],
                       'filter': u'',
                       'recent-filters': None,
                       'sort-order': 'source-lineno',
                       'tree-state': {'expanded-nodes': [(4,)],
                                      'selected-nodes': [(4,)],
                                      'top-node': (0,)}}),
                     ('debug-io',
                      'wide',
                      1,
                      {}),
                     ('debug-probe',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'first-line': 4L,
                       'folded-linenos': [],
                       'history': {u'file:/Applications/WingIDE.app/Contents/Resources/src/testing/runners/run_pytest_xml.py': ['n'\
        'tiles = daskdf.groupby(["Site","geo_index","Year"]).value_counts()'\
        '\n',
        'ntiles = daskdf.value_counts(["Site","geo_index","Year"])\n',
        'ntiles = daskdf["Site","geo_index","Year"].value_counts()\n',
        'ntiles = daskdf[["Site","geo_index","Year"]].value_counts()\n',
        'ntiles = daskdf.groupby(["Site","geo_index","Year"]).Site.counts()'\
        '\n',
        'ntiles = daskdf.groupby(["Site","geo_index","Year"]).Site.count()\n',
        'ntiles\n',
        'ntiles.compute()\n',
        'nyears\n',
        ' total_trees = daskdf.shape[0].compute()\n',
        'total_trees\n',
        'total_sites = daskdf.Site.nunique().compute()\n',
        'total_sites\n',
        'print("There are {} tree predictions from {} sites".format(total_tr'\
        'ees, total_sites))\n',
        'average_height_area.reset_index()\n',
        "sumstats = {\"height\":[\"mean\",\"count\",\"std\"], \"area\":[\"me"\
        "an\",\"count\",\"std\"]}    \naverage_height_area = daskdf.groupby("\
        "['Site']).agg(sumstats).compute().reset_index()\n\n#Number of trees"\
        "\naverage_density = daskdf.groupby([\"Site\",\"geo_index\",\"Year\""\
        "]).count().groupby(\"Site\").left.mean().compute().reset_index()\n"\
        "average_density = average_density.rename(columns = {\"left\":\"n\""\
        "})\n\n",
        'average_density.columns\n',
        'average_height_area.columns()\n',
        'average_height_area.columns\n',
        "average_height_area.columns = average_height_area.columns.map('_'.j"\
        "oin).reset_index()\n",
        "sumstats = {\"height\":[\"mean\",\"count\",\"std\"], \"area\":[\"me"\
        "an\",\"count\",\"std\"]}    \naverage_height_area = daskdf.groupby("\
        "['Site']).agg(sumstats).compute().reset_index()\naverage_height_are"\
        "a.columns = average_height_area.columns.map('_'.join)\naverage_heig"\
        "ht_area = average_height_area.reset_index()\n\n",
        'results = average_height_area.merge(average_density)\n',
        'average_density\n',
        'average_height_area\n',
        'average_height_area.columns \n',
        'average_height_area.columns[0]\n',
        'average_height_area.columns[1]\n',
        'average_height_area.columns[1] = "Site"\n',
        'average_height_area.rename(columns={"Site_":"Site"})\n',
        "sumstats = {\"height\":[\"mean\",\"count\",\"std\"], \"area\":[\"me"\
        "an\",\"count\",\"std\"]}    \naverage_height_area = daskdf.groupby("\
        "['Site']).agg(sumstats).compute().reset_index()\naverage_height_are"\
        "a.columns = average_height_area.columns.map('_'.join)\naverage_heig"\
        "ht_area = average_height_area.rename(columns={\"Site_\":\"Site\"})"\
        "\n\naverage_height_area = average_height_area.reset_index()\n\n#Num"\
        "ber of trees\naverage_density = daskdf.groupby([\"Site\",\"geo_inde"\
        "x\",\"Year\"]).count().groupby(\"Site\").left.mean().compute().rese"\
        "t_index()\naverage_density = average_density.rename(columns = {\"le"\
        "ft\":\"n\"})\n    \n#Combine \nresults = average_height_area.merge("\
        "average_density)\n\n",
        'sumstats = {"height":["mean","count","std"], "area":["mean",upper,"'\
        'count","std"]}\n',
        'upper\n',
        "average_height_area = daskdf.groupby(['Site']).agg(sumstats).comput"\
        "e().reset_index()\n",
        "daskdf.groupby(['Site']).height.quantile(0.05)\n",
        "daskdf.groupby(['Site']).quantile(0.05)\n",
        "daskdf.groupby(['Site']).height.quantile()\n",
        "daskdf.groupby(['Site']).quantile(q=0.05,axis=1)\n",
        "daskdf.groupby(['Site']).quantile(q=0.05,axis=1).\n",
        'results\n',
        'daskdf.groupby(["Site","geo_index","Year"]).size()\n',
        'daskdf.groupby(["Site","geo_index","Year"]).size().compute()\n',
        'a = treedf.groupby(["Site","geo_index"]).size().reset_index().compu'\
        'te()\n',
        'a\n',
        'a.columns\n',
        'treedf.groupby(["Site","geo_index"]).size().to_frame("size")\n',
        'treedf.groupby(["Site","geo_index"]).size().to_frame("size").comput'\
        'e()\n',
        'fall_var = treedf.groupby(["Site","geo_index"]).size().to_frame("si'\
        'ze").reset_index().compute().groupby("Site").quantile([0.05,0.95]).'\
        'reset_index()\n',
        'fall_var = treedf.groupby(["Site","geo_index"]).size().to_frame("si'\
        'ze").reset_index().compute().groupby("Site").size.quantile([0.05,0.'\
        '95]).reset_index()\n',
        'fall_var = treedf.groupby(["Site","geo_index"]).size().to_frame("n"'\
        ').reset_index().compute().groupby("Site").n.quantile([0.05,0.95]).r'\
        'eset_index()\n',
        'fall_var.unstack()\n',
        'fall_var.level_1.unstack()\n',
        'fall_var.reset_index()\n',
        'fall_var.pivot("level_1")\n',
        'fall_var.pivot("level_1","n")\n',
        'fall_var.pivot("level_1","n").reset_index()\n',
        'fall_var.rename(columns={"level_1":"quantile"})\n',
        'fall_var = fall_var.rename(columns={"level_1":"quantile"})\n',
        'result = fall_mean.merge(fall_var)\n',
        'result\n',
        'fall_var.set_index("Site")\n',
        'fall_var.set_index("Site").quantile.unstack()\n',
        'fall_var.set_index("Site")["quantile"].unstack()\n',
        'fall_var.set_index("Site")["quantile"].unstack("n")\n',
        'fall_var.set_index("Site").unstack("n")\n',
        'fall_var.set_index("Site").unstack("quantile")\n',
        'fall_var.set_index(["Site","quantile"]).unstack("n")\n',
        'fall_var.set_index(["Site","quantile"]).unstack()\n',
        'fall_var.set_index(["Site","quantile"]).unstack().reset_index()\n',
        'fall_var.set_index(["Site","quantile"]).unstack().rename_axis(None,'\
        '1).reset_index()\n',
        'fall_var.set_index(["Site","quantile"]).unstack().rename_axis(None,'\
        '0).reset_index()\n',
        'fall_var.set_index(["Site","quantile"]).unstack().rename_axis(None)'\
        '.reset_index().to_frame()\n',
        'fall_var.set_index(["Site","quantile"]).unstack().rename_axis(None)'\
        '.reset_index().merge(fall_mean)\n',
        'fall_var.set_index(["Site","quantile"]).unstack().rename_axis(None)'\
        '.reset_index()\n',
        'fall_var.set_index(["Site","quantile"]).unstack().rename_axis(None)'\
        '.reset_index().    \n',
        'fall_var.cast("quantile")\n',
        'pd.cat\n',
        'pd.cast\n',
        'fall_var.pivot_table(index="Site",columns="quantile",values="n",fil'\
        'l_value=None).reset_index()\n',
        'fall_var = fall_var.pivot_table(index="Site",columns="quantile",val'\
        'ues="n",fill_value=None).reset_index()\n',
        'fall_mean= treedf.groupby(["Site","geo_index"]).size().reset_index('\
        ').compute().groupby("Site").mean().reset_index()\nfall_var = treedf'\
        '.groupby(["Site","geo_index"]).size().to_frame("n").reset_index().c'\
        'ompute().groupby("Site").n.quantile([0.05,0.95]).reset_index()\nfal'\
        'l_var = fall_var.rename(columns={"level_1":"quantile"})\nfall_var ='\
        ' fall_var.pivot_table(index="Site",columns="quantile",values="n",fi'\
        'll_value=None).reset_index()\nfall_var.rename(columns={"0.05":"lowe'\
        'r"})\n\n',
        'fall_var\n',
        'fall_var.rename(columns={"0.05":"lower"})\n',
        'fall_var.rename(columns={0.05:"lower"})\n',
        'fall_mean= treedf.groupby(["Site","geo_index"]).size().reset_index('\
        ').compute().groupby("Site").mean().reset_index()\n',
        'fall_mean = fall_mean.rename(columns={0:"mean"})\n',
        'fall_mean\n',
        'window.indices\n',
        'window.indices()\n',
        'window\n',
        'annotations_files\n',
        'crop_annotations\n',
        'os.getcwd()\n',
        'os.path.exists("tests/data/output/OSBS_029_1.png")\n',
        'glob.glob("tests/output/*)\n',
        'glob.glob("tests/output/*")\n',
        'tf_filenames\n',
        'f\n',
        'saved_file\n',
        'projected_path\n',
        'saved_file = tile_raster.run(path=projected_raster_path, save_dir=d'\
        'irname,patch_size=100)\n']},
                       'launch-id': None,
                       'sel-line': 8L,
                       'sel-line-start': 300L,
                       'selection_end': 300L,
                       'selection_start': 300L,
                       'zoom': 0L}),
                     ('debug-watch',
                      'wide',
                      1,
                      {'node-states': [],
                       'tree-state': {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': (0,)}}),
                     ('debug-modules',
                      'wide',
                      1,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'first-line': 3L,
                       'folded-linenos': [],
                       'history': {None: ['5/1.0\n',
        '100\n',
        '90/100\n',
        '10/10\n',
        'unique(["a","b","A"])\n',
        'unique(["a","b","a"])\n',
        'import numpy as np\n',
        'np.unique(["a","b","a"])\n',
        'len(np.unique(["a","b","a"]))\n',
        '9786/4892\n',
        '6630/3314\n',
        'p="data/Vacation_03192020_203.tif"\n',
        'import os\n',
        'os.getcwd()\n',
        'import rasterio\n',
        'p="tests/data/Vacation_03192020_203.tif"\n',
        'd=rasterio.open(p)\n',
        'd.crs\n',
        'str(d.crs)\n']},
                       'launch-id': None,
                       'sel-line': 10L,
                       'sel-line-start': 465L,
                       'selection_end': 475L,
                       'selection_start': 465L,
                       'zoom': 0L}),
                     ('bookmarks',
                      'wide',
                      1,
                      {}),
                     ('messages',
                      'wide',
                      2,
                      {'current-domain': 0}),
                     ('os-command',
                      'wide',
                      1,
                      {})],
        'primary_view_state': {'editor_states': ({'bookmarks': ([[loc('manifest.py'),
        {'attrib-starts': [('main',
                            121)],
         'first-line': 124L,
         'folded-linenos': [],
         'sel-line': 143L,
         'sel-line-start': 4461L,
         'selection_end': 4487L,
         'selection_start': 4487L,
         'zoom': 0L},
        1590586444.110219],
        [loc('tests/test_manifest.py'),
         {'attrib-starts': [],
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 11L,
          'sel-line-start': 191L,
          'selection_end': 230L,
          'selection_start': 230L,
          'zoom': 0L},
         1590586444.436016],
        [loc('tests/test_manifest.py'),
         {'attrib-starts': [('test_utm_project',
                             23)],
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 24L,
          'sel-line-start': 531L,
          'selection_end': 548L,
          'selection_start': 548L,
          'zoom': 0L},
         1590586514.544784],
        [loc('manifest.py'),
         {'attrib-starts': [],
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 11L,
          'sel-line-start': 304L,
          'selection_end': 323L,
          'selection_start': 304L,
          'zoom': 0L},
         1590586522.861488],
        [loc('tests/test_manifest.py'),
         {'attrib-starts': [('test_tile_raster',
                             24)],
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 25L,
          'sel-line-start': 550L,
          'selection_end': 588L,
          'selection_start': 554L,
          'zoom': 0L},
         1590586537.146529],
        [loc('manifest.py'),
         {'attrib-starts': [],
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 11L,
          'sel-line-start': 304L,
          'selection_end': 323L,
          'selection_start': 304L,
          'zoom': 0L},
         1590586540.470814],
        [loc('manifest.py'),
         {'attrib-starts': [('main',
                             121)],
          'first-line': 130L,
          'folded-linenos': [],
          'sel-line': 142L,
          'sel-line-start': 4382L,
          'selection_end': 4461L,
          'selection_start': 4382L,
          'zoom': 0L},
         1590586548.098218],
        [loc('tests/test_manifest.py'),
         {'attrib-starts': [('test_tile_raster',
                             24)],
          'first-line': 6L,
          'folded-linenos': [],
          'sel-line': 24L,
          'sel-line-start': 512L,
          'selection_end': 533L,
          'selection_start': 533L,
          'zoom': 0L},
         1590587069.609269],
        [loc('../../../miniconda3/envs/Zooniverse/lib/python3.7/site-packages/_pytest/fixtures.py'),
         {'attrib-starts': [('FixtureRequest',
                             342),
                            ('FixtureRequest._getnextfixturedef',
                             380)],
          'first-line': 381L,
          'folded-linenos': [],
          'sel-line': 392L,
          'sel-line-start': 14793L,
          'selection_end': 14793L,
          'selection_start': 14793L,
          'zoom': 0L},
         1590589485.737123],
        [loc('tests/test_manifest.py'),
         {'attrib-starts': [('test_tile_raster',
                             26)],
          'first-line': 6L,
          'folded-linenos': [],
          'sel-line': 26L,
          'sel-line-start': 547L,
          'selection_end': 568L,
          'selection_start': 568L,
          'zoom': 0L},
         1590590821.253893],
        [loc('tests/test_manifest.py'),
         {'attrib-starts': [('projected_path',
                             17)],
          'first-line': 6L,
          'folded-linenos': [],
          'sel-line': 18L,
          'sel-line-start': 330L,
          'selection_end': 360L,
          'selection_start': 360L,
          'zoom': 0L},
         1590591056.194692],
        [loc('manifest.py'),
         {'attrib-starts': [('main',
                             121)],
          'first-line': 130L,
          'folded-linenos': [],
          'sel-line': 142L,
          'sel-line-start': 4382L,
          'selection_end': 4461L,
          'selection_start': 4382L,
          'zoom': 0L},
         1590591059.9393],
        [loc('tests/test_manifest.py'),
         {'attrib-starts': [('test_tile_raster',
                             26)],
          'first-line': 15L,
          'folded-linenos': [],
          'sel-line': 27L,
          'sel-line-start': 603L,
          'selection_end': 655L,
          'selection_start': 641L,
          'zoom': 0L},
         1590591136.074464],
        [loc('manifest.py'),
         {'attrib-starts': [('main',
                             121)],
          'first-line': 130L,
          'folded-linenos': [],
          'sel-line': 142L,
          'sel-line-start': 4382L,
          'selection_end': 4410L,
          'selection_start': 4399L,
          'zoom': 0L},
         1590591140.013633],
        [loc('manifest.py'),
         {'attrib-starts': [],
          'first-line': 6L,
          'folded-linenos': [],
          'sel-line': 11L,
          'sel-line-start': 304L,
          'selection_end': 322L,
          'selection_start': 311L,
          'zoom': 0L},
         1590591141.626687],
        [loc('manifest.py'),
         {'attrib-starts': [('main',
                             121)],
          'first-line': 120L,
          'folded-linenos': [],
          'sel-line': 142L,
          'sel-line-start': 4382L,
          'selection_end': 4410L,
          'selection_start': 4399L,
          'zoom': 0L},
         1590591147.207523],
        [loc('tile_raster.py'),
         {'attrib-starts': [('parse_args',
                             8)],
          'first-line': 2L,
          'folded-linenos': [],
          'sel-line': 13L,
          'sel-line-start': 381L,
          'selection_end': 418L,
          'selection_start': 408L,
          'zoom': 0L},
         1590591175.465214],
        [loc('manifest.py'),
         {'attrib-starts': [('main',
                             121)],
          'first-line': 123L,
          'folded-linenos': [],
          'sel-line': 146L,
          'sel-line-start': 4550L,
          'selection_end': 4585L,
          'selection_start': 4585L,
          'zoom': 0L},
         1590591194.897674],
        [loc('tests/test_manifest.py'),
         {'attrib-starts': [('test_tile_raster',
                             26)],
          'first-line': 15L,
          'folded-linenos': [],
          'sel-line': 27L,
          'sel-line-start': 603L,
          'selection_end': 655L,
          'selection_start': 641L,
          'zoom': 0L},
         1590591194.902502],
        [loc('tests/test_manifest.py'),
         {'attrib-starts': [('projected_path',
                             17)],
          'first-line': 4L,
          'folded-linenos': [],
          'sel-line': 17L,
          'sel-line-start': 304L,
          'selection_end': 329L,
          'selection_start': 329L,
          'zoom': 0L},
         1590591223.803772]],
        20),
        'current-loc': loc('tile_raster.py'),
        'editor-state-list': [(loc('tests/test_manifest.py'),
                               {'attrib-starts': [('projected_path',
        17)],
                                'first-line': 4L,
                                'folded-linenos': [],
                                'sel-line': 17L,
                                'sel-line-start': 304L,
                                'selection_end': 329L,
                                'selection_start': 329L,
                                'zoom': 0L}),
                              (loc('tests/test_aggregate.py'),
                               {'attrib-starts': [],
                                'first-line': 0L,
                                'folded-linenos': [],
                                'sel-line': 0L,
                                'sel-line-start': 0L,
                                'selection_end': 150L,
                                'selection_start': 0L,
                                'zoom': 0L}),
                              (loc('manifest.py'),
                               {'attrib-starts': [('main',
        121)],
                                'first-line': 123L,
                                'folded-linenos': [],
                                'sel-line': 146L,
                                'sel-line-start': 4550L,
                                'selection_end': 4585L,
                                'selection_start': 4585L,
                                'zoom': 0L}),
                              (loc('tile_raster.py'),
                               {'attrib-starts': [('getTileGeom',
        32)],
                                'first-line': 13L,
                                'folded-linenos': [],
                                'sel-line': 39L,
                                'sel-line-start': 1356L,
                                'selection_end': 1364L,
                                'selection_start': 1364L,
                                'zoom': 0L})],
        'has-focus': False,
        'locked': False},
        [loc('tests/test_manifest.py'),
         loc('tests/test_aggregate.py'),
         loc('manifest.py'),
         loc('tile_raster.py')]),
                               'open_files': [u'tests/test_aggregate.py',
        u'manifest.py',
        u'tests/test_manifest.py',
        u'tile_raster.py']},
        'saved_notebook_display': None,
        'split_percents': {0: 0.5779816513761468},
        'splits': 2,
        'tab_location': 'top',
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {0: 0.5},
                 'splits': 2,
                 'tab_location': 'left',
                 'user_data': {}},
        'window-alloc': (1440,
                         0,
                         1920,
                         1080)}]}
guimgr.recent-documents = [loc('tile_raster.py'),
                           loc('tests/test_manifest.py'),
                           loc('manifest.py'),
                           loc('tests/test_aggregate.py')]
guimgr.visual-state = {loc('../../DeepForest/setup.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../DeepForest/tests/test_deepforest.py'): {'a'\
        'ttrib-starts': [('test_reload_weights',
                          215)],
        'first-line': 198L,
        'folded-linenos': [],
        'sel-line': 218L,
        'sel-line-start': 7333L,
        'selection_end': 7369L,
        'selection_start': 7369L,
        'zoom': 0L},
                       loc('../../DeepForest_Model/GenerateAnchors.py'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 12L,
        'sel-line-start': 299L,
        'selection_end': 318L,
        'selection_start': 318L,
        'zoom': 0L},
                       loc('../../DeepForest_Model/generate.py'): {'attrib-s'\
        'tarts': [],
        'first-line': 225L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../DeepForest_Model/train.py'): {'attrib-star'\
        'ts': [('finetuning',
                40)],
        'first-line': 76L,
        'folded-linenos': [],
        'sel-line': 83L,
        'sel-line-start': 3812L,
        'selection_end': 3860L,
        'selection_start': 3860L,
        'zoom': 0L},
                       loc('SLURM/submit_job.sbatch'): {'attrib-starts': [],
        'first-line': 1L,
        'folded-linenos': [],
        'sel-line': 20L,
        'sel-line-start': 821L,
        'selection_end': 894L,
        'selection_start': 821L,
        'zoom': 0L},
                       loc('SLURM/submit_test.sbatch'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 14L,
        'sel-line-start': 542L,
        'selection_end': 542L,
        'selection_start': 542L,
        'zoom': 0L},
                       loc('SLURM/train.sbatch'): {'attrib-starts': [],
        'first-line': 11L,
        'folded-linenos': [],
        'sel-line': 20L,
        'sel-line-start': 919L,
        'selection_end': 919L,
        'selection_start': 919L,
        'zoom': 0L},
                       loc('aggregate.py'): {'attrib-starts': [('run',
        252)],
        'first-line': 248L,
        'folded-linenos': [],
        'sel-line': 258L,
        'sel-line-start': 9025L,
        'selection_end': 9084L,
        'selection_start': 9084L,
        'zoom': 0L},
                       loc('create_model.py'): {'attrib-starts': [('predict_'\
        'empty_frames',
        103)],
        'first-line': 97L,
        'folded-linenos': [],
        'sel-line': 111L,
        'sel-line-start': 3780L,
        'selection_end': 3840L,
        'selection_start': 3788L,
        'zoom': 0L},
                       loc('cron.txt'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 5L,
        'sel-line-start': 281L,
        'selection_end': 304L,
        'selection_start': 304L,
        'zoom': 0L},
                       loc('environment.yml'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 13L,
        'sel-line-start': 187L,
        'selection_end': 201L,
        'selection_start': 201L,
        'zoom': 0L},
                       loc('extract.py'): {'attrib-starts': [('run',
        35)],
        'first-line': 55L,
        'folded-linenos': [],
        'sel-line': 70L,
        'sel-line-start': 2497L,
        'selection_end': 2528L,
        'selection_start': 2528L,
        'zoom': 0L},
                       loc('extract_old.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 17L,
        'sel-line-start': 528L,
        'selection_end': 532L,
        'selection_start': 532L,
        'zoom': 0L},
                       loc('manifest.py'): {'attrib-starts': [('utm_project',
        14)],
        'first-line': 9L,
        'folded-linenos': [],
        'sel-line': 14L,
        'sel-line-start': 337L,
        'selection_end': 352L,
        'selection_start': 341L,
        'zoom': 0L},
                       loc('tests/data/Vacation_03192020_203.tif'): {'attrib'\
        '-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('tests/submit_test.sbatch'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 7L,
        'sel-line-start': 288L,
        'selection_end': 313L,
        'selection_start': 313L,
        'zoom': 0L},
                       loc('tests/test_aggregate.py'): {'attrib-starts': [('t'\
        'est_run',
        61)],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 63L,
        'sel-line-start': 2514L,
        'selection_end': 2551L,
        'selection_start': 2551L,
        'zoom': 0L},
                       loc('tests/test_create_model.py'): {'attrib-starts': [('t'\
        'est_format_shapefiles',
        39)],
        'first-line': 27L,
        'folded-linenos': [],
        'sel-line': 41L,
        'sel-line-start': 1403L,
        'selection_end': 1483L,
        'selection_start': 1482L,
        'zoom': 0L},
                       loc('tests/test_tile_raster.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('tile_raster.py'): {'attrib-starts': [('parse_arg'\
        's',
        8)],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 10L,
        'sel-line-start': 233L,
        'selection_end': 296L,
        'selection_start': 296L,
        'zoom': 0L},
                       loc('upload.sh'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 1L,
        'sel-line-start': 31L,
        'selection_end': 157L,
        'selection_start': 31L,
        'zoom': 0L},
                       loc('../../NEON_crown_maps/hard_mining.py'): {'attrib'\
        '-starts': [],
        'first-line': 98L,
        'folded-linenos': [],
        'sel-line': 128L,
        'sel-line-start': 4764L,
        'selection_end': 4764L,
        'selection_start': 4764L,
        'zoom': 0L},
                       loc('../../NEON_crown_maps/main.py'): {'attrib-starts': [('g'\
        'enerate_tfrecord',
        69)],
        'first-line': 22L,
        'folded-linenos': [],
        'sel-line': 112L,
        'sel-line-start': 3934L,
        'selection_end': 3938L,
        'selection_start': 3938L,
        'zoom': 0L},
                       loc('../../NEON_crown_maps/predict.py'): {'attrib-sta'\
        'rts': [],
        'first-line': 102L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../NEON_crown_maps/tests/test_sampling.py'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 2L,
        'sel-line-start': 25L,
        'selection_end': 132L,
        'selection_start': 25L,
        'zoom': 0L},
                       loc('../../../miniconda3/envs/Zooniverse/lib/python3.6/site-packages/_pytest/python.py'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../../miniconda3/envs/Zooniverse/lib/python3.7/site-packages/_pytest/_code/code.py'): {'a'\
        'ttrib-starts': [('TracebackEntry',
                          182),
                         ('TracebackEntry.statement',
                          209)],
        'first-line': 196L,
        'folded-linenos': [],
        'sel-line': 212L,
        'sel-line-start': 6434L,
        'selection_end': 6434L,
        'selection_start': 6434L,
        'zoom': 0L},
                       loc('../../../miniconda3/envs/Zooniverse/lib/python3.7/site-packages/_pytest/fixtures.py'): {'a'\
        'ttrib-starts': [('FixtureRequest',
                          342),
                         ('FixtureRequest._getnextfixturedef',
                          380)],
        'first-line': 381L,
        'folded-linenos': [],
        'sel-line': 391L,
        'sel-line-start': 14730L,
        'selection_end': 14792L,
        'selection_start': 14730L,
        'zoom': 0L},
                       loc('../../../miniconda3/envs/Zooniverse/lib/python3.7/site-packages/_pytest/python.py'): {'a'\
        'ttrib-starts': [('Module',
                          440),
                         ('Module._importtestmodule',
                          508)],
        'first-line': 524L,
        'folded-linenos': [],
        'sel-line': 535L,
        'sel-line-start': 19937L,
        'selection_end': 19973L,
        'selection_start': 19973L,
        'zoom': 0L},
                       loc('../../../miniconda3/envs/Zooniverse/lib/python3.7/site-packages/keras_retinanet/preprocessing/csv_generator.py'): {'a'\
        'ttrib-starts': [('CSVGenerator',
                          113),
                         ('CSVGenerator.__init__',
                          119)],
        'first-line': 147L,
        'folded-linenos': [],
        'sel-line': 159L,
        'sel-line-start': 5566L,
        'selection_end': 5566L,
        'selection_start': 5566L,
        'zoom': 0L},
                       loc('../../../miniconda3/envs/Zooniverse/lib/python3.7/site-packages/matplotlib/image.py'): {'a'\
        'ttrib-starts': [('_ImageBase',
                          219),
                         ('_ImageBase.set_data',
                          671)],
        'first-line': 658L,
        'folded-linenos': [],
        'sel-line': 676L,
        'sel-line-start': 26227L,
        'selection_end': 26227L,
        'selection_start': 26227L,
        'zoom': 0L},
                       loc('../../../miniconda3/envs/Zooniverse/lib/python3.7/site-packages/pandas/core/generic.py'): {'a'\
        'ttrib-starts': [('NDFrame',
                          150),
                         ('NDFrame.__getattr__',
                          5256)],
        'first-line': 5260L,
        'folded-linenos': [],
        'sel-line': 5273L,
        'sel-line-start': 176248L,
        'selection_end': 176248L,
        'selection_start': 176248L,
        'zoom': 0L},
                       loc('../../../miniconda3/envs/Zooniverse/lib/python3.7/site-packages/pandas/core/internals/construction.py'): {'a'\
        'ttrib-starts': [('extract_index',
                          330)],
        'first-line': 344L,
        'folded-linenos': [],
        'sel-line': 353L,
        'sel-line-start': 11302L,
        'selection_end': 11345L,
        'selection_start': 11302L,
        'zoom': 0L},
                       loc('../../../miniconda3/envs/Zooniverse/lib/python3.7/site-packages/pandas/io/common.py'): {'a'\
        'ttrib-starts': [('get_filepath_or_buffer',
                          143)],
        'first-line': 188L,
        'folded-linenos': [],
        'sel-line': 198L,
        'sel-line-start': 5552L,
        'selection_end': 5636L,
        'selection_start': 5552L,
        'zoom': 0L},
                       loc('../../../miniconda3/envs/Zooniverse/lib/python3.7/site-packages/pandas/io/formats/csvs.py'): {'a'\
        'ttrib-starts': [('CSVFormatter',
                          32),
                         ('CSVFormatter.__init__',
                          33)],
        'first-line': 101L,
        'folded-linenos': [],
        'sel-line': 113L,
        'sel-line-start': 3256L,
        'selection_end': 3256L,
        'selection_start': 3256L,
        'zoom': 0L},
                       loc('../../../miniconda3/envs/Zooniverse/lib/python3.7/site-packages/requests/adapters.py'): {'a'\
        'ttrib-starts': [('HTTPAdapter',
                          83),
                         ('HTTPAdapter.send',
                          393)],
        'first-line': 478L,
        'folded-linenos': [],
        'sel-line': 499L,
        'sel-line-start': 20078L,
        'selection_end': 20112L,
        'selection_start': 20112L,
        'zoom': 0L}}
proj.build-cmd = {None: ('default',
                         None)}
proj.env-vars = {None: ('default',
                        [u''])}
proj.pyexec = {None: ('custom',
                      u'/Users/ben/miniconda3/envs/Zooniverse/bin/python')}
proj.vcs-system-config = ('prefs',
                          {'bzr': {'versioncontrol.bzr.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.bzr.executable': u'bzr'},
                           'cvs': {'versioncontrol.cvs.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.cvs.executable': u'cvs',
                                   'versioncontrol.cvs.extra-global-args': '-'\
        'z3'},
                           'git': {'versioncontrol.git.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.git.executable': u'git',
                                   'versioncontrol.git.use-porcelain': True},
                           'hg': {'versioncontrol.hg.active': 'active-if-pro'\
        'ject-dir',
                                  'versioncontrol.hg.dont-find-unregistered': True,
                                  'versioncontrol.hg.executable': u'hg',
                                  'versioncontrol.hg.extra-global-args': '--'\
        'encoding=utf8'},
                           'perforce': {'versioncontrol.perforce.active': 'n'\
        'ot-active',
        'versioncontrol.perforce.dont-find-unregistered': True,
        'versioncontrol.perforce.executable': u'p4',
        'versioncontrol.perforce.extra-global-args': ''},
                           'svn': {'versioncontrol.svn.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.svn.executable': u'svn',
                                   'versioncontrol.svn.extra-global-args': '',
                                   'versioncontrol.svn.svnadmin-executable': u'svnadmin'}})
search.search-history = [u'tile_raster',
                         u'utm_project',
                         u'utm',
                         u'dirname',
                         u'buffer',
                         u'assert',
                         u'100',
                         u'debug',
                         u'image_data',
                         u'format_shapefiles',
                         u'subject_data',
                         u'parsed',
                         u'pandas',
                         u'subject_ids',
                         u'subject_id',
                         u'to_csv',
                         u'download',
                         u'datetime',
                         u'buff',
                         u'date']
testing.run-as-package-module = {None: False}
testing.stored-results = (1,
                          [(u'/Users/ben/Documents/EvergladesWadingBird/Zooniverse/tests/test_create_model.py',
                            [('test_shapefile_to_annotations',
                              0,
                              None,
                              None,
                              None,
                              1590034344,
                              31),
                             ('test_split_test_train',
                              0,
                              None,
                              None,
                              None,
                              1590034344,
                              60),
                             ('test_format_shapefiles',
                              0,
                              None,
                              None,
                              None,
                              1590034344,
                              51)]),
                           (u'/Users/ben/Documents/EvergladesWadingBird/Zooniverse/tests/test_manifest.py',
                            [('test_utm_project',
                              0,
                              None,
                              None,
                              None,
                              1590590837,
                              21),
                             ('test_tile_raster',
                              0,
                              None,
                              None,
                              None,
                              1590591206,
                              26)]),
                           (u'/Users/ben/Documents/EvergladesWadingBird/Zooniverse/tests/test_extract.py',
                            [('test_extract_empty',
                              0,
                              None,
                              None,
                              None,
                              1590032824,
                              18),
                             ('test_run',
                              0,
                              None,
                              None,
                              None,
                              1590032824,
                              12)]),
                           (u'/Users/ben/Documents/EvergladesWadingBird/Zooniverse/tests/test_aggregate.py',
                            [('test_parse_annotations',
                              0,
                              None,
                              None,
                              None,
                              1590032692,
                              31),
                             ('test_parse_front_screen',
                              0,
                              None,
                              None,
                              None,
                              1590032692,
                              20),
                             ('test_run[False]',
                              0,
                              None,
                              None,
                              None,
                              1590032692,
                              68),
                             ('test_project_point',
                              0,
                              None,
                              None,
                              None,
                              1590032692,
                              49),
                             ('test_download_subject_data',
                              0,
                              None,
                              None,
                              None,
                              1590032692,
                              82),
                             ('test_parse_subject_data',
                              0,
                              None,
                              None,
                              None,
                              1590032692,
                              37),
                             ('test_run[True]',
                              0,
                              None,
                              None,
                              None,
                              1590032692,
                              68),
                             ('test_parse_birds',
                              0,
                              None,
                              None,
                              None,
                              1590032692,
                              42),
                             ('test_parse_additional_observations',
                              0,
                              None,
                              None,
                              None,
                              1590032692,
                              24),
                             ('test_download_data[False]',
                              0,
                              None,
                              None,
                              None,
                              1590032692,
                              76),
                             ('test_load_classifications',
                              0,
                              None,
                              None,
                              None,
                              1590032692,
                              16),
                             ('test_spatial_join',
                              0,
                              None,
                              None,
                              None,
                              1590032692,
                              56)])],
                          {})
